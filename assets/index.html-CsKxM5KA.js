import{_ as o,c as l,a as i,b as t,d as n,e,r as p,o as r}from"./app-CarcV5a4.js";const c={};function u(d,s){const a=p("KotlinPlayground");return r(),l("div",null,[s[0]||(s[0]=i('<h1 id="about-kotlin" tabindex="-1"><a class="header-anchor" href="#about-kotlin"><span>About Kotlin</span></a></h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents"><span>Table of Contents</span></a></h2><ol><li><a href="#lesson-1-kotlin-basics">Lesson 1: Kotlin Basics</a></li><li><a href="#lesson-2-functions">Lesson 2: Functions</a></li><li><a href="#lesson-3-classes-and-objects">Lesson 3: Classes and Objects</a></li><li><a href="#lesson-4-concurrent-programming">Lesson 4: Concurrent Programming</a></li><li><a href="#lesson-5-evolution-of-kotlin">Lesson 5: Evolution of Kotlin</a></li></ol><h2 id="lesson-1-kotlin-basics" tabindex="-1"><a class="header-anchor" href="#lesson-1-kotlin-basics"><span>Lesson 1: Kotlin Basics</span></a></h2><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h3><p>In this lesson, you&#39;ll learn the fundamental concepts of Kotlin programming:</p><ul><li><strong>Get started</strong>: Setting up IntelliJ IDEA and creating your first project</li><li><strong>Operators</strong>: Mathematical, comparison, and assignment operators</li><li><strong>Data types</strong>: Integer types, floating-point numbers, and strings</li><li><strong>Variables</strong>: Mutable and immutable variables with type inference</li><li><strong>Conditionals</strong>: Control flow with if/else, when statements, and loops</li><li><strong>Lists and arrays</strong>: Working with collections</li><li><strong>Null safety</strong>: Kotlin&#39;s approach to preventing null pointer exceptions</li></ul><h3 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h3><h4 id="your-first-kotlin-program" tabindex="-1"><a class="header-anchor" href="#your-first-kotlin-program"><span>Your First Kotlin Program</span></a></h4>',9)),t(a,{title:"Hello%20World",key:"3c2ab425",settings:"%7B%7D",files:"eJyLVkorzVPITczM09BUqI7JUwCCgqLMvJKcPI0YJY/UnJx8HYXy/KKcFMUYJc2YvNqYPKVYAMqjES8="}),s[1]||(s[1]=n("h4",{id:"passing-arguments-to-main",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#passing-arguments-to-main"},[n("span",null,"Passing Arguments to main()")])],-1)),t(a,{title:"Arguments%20Example",key:"8a440fc4",settings:"%7B%7D",files:"eJwlzLEKwjAQgOFXOYNDAlKci1p0UoQ6OHoON6Qh9HqR9CpI6bvb0n/++V6mGQQ6imIph76Ec870Ozw1RwknByMKzH2JQajzcIRlK4LXR64HZrt3VaHU+lsDI0QtYl8nvTBJax1MUJWA5p6Uo6BZrc9MK4tFc/XMaQfbRd6gcSgTinn/ATIrMBY="}),s[2]||(s[2]=n("h3",{id:"operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#operators"},[n("span",null,"Operators")])],-1)),s[3]||(s[3]=n("h4",{id:"mathematical-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mathematical-operators"},[n("span",null,"Mathematical Operators")])],-1)),t(a,{title:"Math%20Operators",key:"c30b1800",settings:"%7B%7D",files:"eJx1zk0KwjAQBeCrPIJCq9g2hi5ceARPYFxEjBqoSUlTXJTe3TTxBzRmEd6Dj5nZk3OvcRNKZzkGruFfWWIn3BWmlVY4Yzvcla9KO3mRtouotb43OuOEYgmKLWZDSCMn+TepGVZgwcSYRBVK0CqqmFNsg/lzVEgf8ufsk+mPjfy9uphWrP0fLn+11MYJLcCKOtB3i3Tkmhwer0JZLQ=="}),s[4]||(s[4]=n("h4",{id:"numeric-operator-methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#numeric-operator-methods"},[n("span",null,"Numeric Operator Methods")])],-1)),t(a,{title:"Operator%20Methods",key:"55909b7c",settings:"%7B%7D",files:"eJxtzEEKwjAUhOGrDMFFskkhrUtP4BGMi2ojBl5eSpMIUnp3hVCU0tn98DEX8SiM0HuWCrNlfNc0OMdMnkEuJ7xjwb0nQnD5GYeEyOASbm5K1Y+T50wsrTA6++CSbBVOOMy/XKxQW9zqox6pJNlV/dd73OhOD/4lzfq9ZsWLZXH9AAxJPlo="}),s[5]||(s[5]=n("h3",{id:"data-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#data-types"},[n("span",null,"Data Types")])],-1)),s[6]||(s[6]=n("h4",{id:"working-with-different-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#working-with-different-types"},[n("span",null,"Working with Different Types")])],-1)),t(a,{title:"Data%20Types",key:"3b802f6f",settings:"%7B%7D",files:"eJxtkc1KxDAQgF8lFGF3D7rbpG3aBS8qgrjgQfBiPWQ1/YGYlG4qLOK7O2nTNnTT06TzMT/fvAdFJ9E3q+V6g35zieDbbtGT1LzkLdLnhp+Gvz9MoONZ8zcmOr5HdxCiWxRiOqdPlWq1zb+aGACCaeIgtRwBaAFpHEY0SkkSOYxQsrTQAUKgMowJoXhHkjSOKI3THT0M/DTxo1BM17K8bhT0WA5emKyt2ZNmspswKmbkS3VHMW730D8sFMYZTmISpxnNyKLti64uNX1WrLWF7iGEMqvnlWNRKcGZHEUOL4B023G3fNPCJkKu88DI3qOrSX8ebJZI7xuY+QYeCJwDMt7AAxjfQEwX8CC9PmBmpR5o8AeUY9WDGTsATb48iNVjtne09eBfLoOPf3S+2wg="}),s[7]||(s[7]=n("h4",{id:"type-casting",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-casting"},[n("span",null,"Type Casting")])],-1)),t(a,{title:"Type%20Casting",key:"36bbb84c",settings:"%7B%7D",files:"eJx9j0ELgkAQhf/KIB30Unaog9ClVOoQnTpliNZaC+tM6BqG+N/bdTEjqoVddt68+Zh3sLIKIU842g40EYI690QA92CDEhYwN9qt4CgF2pGlZUmwfEjmwajhY0n6bzttZDk/zKGgRPburvhr96lKxYtuqvcB804msC85XqDCMyvKExWshIwKEKRErPJUqUMiQrblQnBClWoau66r79C/slrnKFXXrcMwDlaxH8Sz4HPHHTLIDUhtOFC/xFmzGlLNVMYe39naCK3jE1L8eLw="}),s[8]||(s[8]=n("h3",{id:"strings",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#strings"},[n("span",null,"Strings")])],-1)),s[9]||(s[9]=n("h4",{id:"string-basics-and-templates",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#string-basics-and-templates"},[n("span",null,"String Basics and Templates")])],-1)),t(a,{title:"Strings",key:"0c53b39a",settings:"%7B%7D",files:"eJxtUl1vgjAU/St3DQ8aM50ue/RlH8l8WLbEva17qFClSblltKiJ8b/vtoJUFAiBc8o5p+fyw9Y1QiEUDoZw4Ah0TCbwLKxKwbpK4cae0K3QYKcwB87epdYGdqbS2R1nET27pjm2K87iH7V26l4rlK0D7JTLgZ5LLeGvNk5Gpk7uXdANZ4D98Z0rC3SJDirOwh12cmgSBIkxIcUCM4luMOxFW4bVkBpMhZMonDLYJcG6WMnqc/1qKPIcHq+ZF+E8M+uYQlorNjJsYAG52EpILnQyunEGI+JBYNaxQYtiEHs7pZNFqSlm1JUin+lDNJHgK1ZpPCYtcUN1eyax4+aNmkwO7dvxyvJtX1a0E6oDFN5yblMvc1WFDuIYLfklMHBP0XSNo3vczqEnNbr8/AiK7C2YNaTauNxP9yJtSeU4jQM7babbAv5H6kHNdHooZ77HRHHWI07t9GX9Dgg7cmS//9OgCio="}),s[10]||(s[10]=n("h3",{id:"variables",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#variables"},[n("span",null,"Variables")])],-1)),s[11]||(s[11]=n("h4",{id:"mutable-and-immutable-variables",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mutable-and-immutable-variables"},[n("span",null,"Mutable and Immutable Variables")])],-1)),t(a,{title:"Variables",key:"7fd93108",settings:"%7B%7D",files:"eJyVUstOwzAQ/JWVlUMroZaWconEDSSCgAsgDpiDSdyykrOJHKeAqv47fqRJ2lCk5hJrPDM7u+s3tqwJcoE0GsOGE9hvOoUkz2sjPpSEtdDoD6O1UONAsCcgkUu4As7uJBEupeYsXJYaySgacfZoKTFEjslZI20rPPzhr1t/DVVaaFdgdn5omxAatAk8w/r7f1tgp5sPdC9lJozMjujaYDffpcIUDZifUkImUyW0MFhQl+0LM/MZQ0LGBZx3F0rSyt1cF7VryaaYXB7GeA3iyJucwX0jiYJ2mOfZxUCyE5aUym4BHtIyCykWc4fvtkdmyGszXUxmi8AL0JD6ZGzald/urVSq4MyxA9pP199JUPqhVXHbRceI+nmxgmjTA+LYTrmqJhXmpZLu3Wz/s2ha2XMJ2IlGTaN7RgE7ZrTlxN5/AeQGB98="}),s[12]||(s[12]=n("h3",{id:"conditionals",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#conditionals"},[n("span",null,"Conditionals")])],-1)),s[13]||(s[13]=n("h4",{id:"if-else-statements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#if-else-statements"},[n("span",null,"If/Else Statements")])],-1)),t(a,{title:"If-Else",key:"4399f80c",settings:"%7B%7D",files:"eJyNkbFOwzAQQH/liBjSqVWBjZSBhUpQkGAjDKacU0uOz7LPCIT4dy5JISEQqR485Pzi95LHTCcHtTIun8FH6UDWq7LgUv2M4VZfJh+hgJPF39GdVYzN8Gw/7HajIf9Fr0bEzz3N8sE4ti4vswci8XDvsBXoqMxm3aFPQBvxf2RDDOgoVbsxNBSaz+EmWTbeImzJvRg25GLfUyWMPIxsCr4fFrCY8N3QnhyrDvBzWE7h97Wycneg5IE0eCTxO6j6WoUKx+R0+1qDioBvPmCMUt6HM9Yeg+IUUOqXg19s4pV82qJNGZ5awan0cEjY+Wkle4f1fusIhmFHfAHH7YtaNdHKnr4A7ba/ug=="}),s[14]||(s[14]=n("h4",{id:"ranges-and-when-statements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ranges-and-when-statements"},[n("span",null,"Ranges and When Statements")])],-1)),t(a,{title:"Ranges%20and%20When",key:"742361ca",settings:"%7B%7D",files:"eJx1kV9LwzAUxb/KNQh2D24dun+Cgn/QNwUVfTA+RJpugfR2NKkK4nffbZp2TbflpfSec27PL/1gaYmQCYXRAP44Ap3RCJ4FLqWpX7+FBiyzL1k8pS+2TCRaA5cwiWtZpRDtyAphPByO47hdWp11odBqjDh7E1olfivkKRgfvIDj/i7OBvWG//rRdnxfSaSgsDIj37ZrIU2pXcXzST39qZyRnweNYji96tR6zJt0+1WH6GjOFqH5IbeN+yiwS21kaH1dCXtiQICmDOHuxPayCQPyd01eo3Lc8i0LkUiiO0xFfRexu/6qBmfXnAXinMS5o+HspqfNSJt57banTUmbeu2uqzXEnN03Y0/Uua6qNv1fV9+Bk4V9bgBzo7hF"}),s[15]||(s[15]=n("h4",{id:"loops",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#loops"},[n("span",null,"Loops")])],-1)),t(a,{title:"Loops",key:"5a9d073a",settings:"%7B%7D",files:"eJyVksFPwjAUxv+V58KhCzgYhgvRi0YjFzXGxIPzUNgDmnTt0hWQGP93u5bObQ4jO23ve+/rb9/rW7DcCMgoEySEz0SAeYZDuJMKuJQ57JheA1WK7p22pRxy1AVcuerjkiRBKldJMIAkWFDtXwRV+yQI3VSumNCm8clMTo18KC/NKQQ5Zig0MGGNK4r6XM83VaNfNWNu2N3nEX4mUvxoDjiWmjxtUhFbHMDh4NDjReXErNRI+BvVGs80ZkA19KwFsAI8fpu+wn2mYoUWuGgG9rDJ5qgKiM8n7dxYiRRH0SQ8dLN62O1MvOGN3Aidyp3otJtAKb1IiE8yvd2iAOFQO33HURSPoNCYw/hfziaT1zXjLhN/8xTM2WK/4FjevpGr7mwXqYRLuGisxQv9fteqrp0KvWqepimmx/eEOZrN/kD5BJxQ+3dlC6QJ47vvkXN59tdlNpXg/RttBBRP"}),s[16]||(s[16]=n("h3",{id:"lists-and-arrays",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lists-and-arrays"},[n("span",null,"Lists and Arrays")])],-1)),s[17]||(s[17]=n("h4",{id:"working-with-lists",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#working-with-lists"},[n("span",null,"Working with Lists")])],-1)),t(a,{title:"Lists",key:"113c76c0",settings:"%7B%7D",files:"eJyVkDFvwjAQhf/KyaoESBV0rpSFDamoQ4cOhMGRHXqqfY6cSyqE+t97sWnSAguefHd+777nnao7Aq+R5gs4lQRyVivYeN+xrpwFhy3ndq8dILUcO2+JWyjS7LWel2roNZZL9QilalBTyNceg0Mq1SI7NBGJHYlgM/k8w8Mf1/HtiLK9CeKPL1ILw5lzqO5ByfpltD70VmS3x9oYmRmxnMCmENtgsEZrEprEyKLrBIk0NDZqxkDtFKIK4fPfP5LmLtoMXAlROBx/i2gmhFH7xjoy0uEd+WMtRqm5rNGxjXAC5N3THooCZtUMvi/x12l7e7aAL/EYHkqQa++0WhzU/gd4vrhT"}),s[18]||(s[18]=n("h4",{id:"working-with-arrays",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#working-with-arrays"},[n("span",null,"Working with Arrays")])],-1)),t(a,{title:"Arrays",key:"21990087",settings:"%7B%7D",files:"eJyNkMuqwjAURX/lEO6g5ZYr19dAcCCOfYDOjIPYphqwJyWNYhH/3ZOm1heCHRWy914rWbH0gJAJhUEIZ45AX6sFI2NECTqFwhqF28IfHMUecmkLGIJwgVkacJboLWcRcBYLe/tBYUrOQt/KacHukaJz6g7g5+w2/mKNVqJd6kWFCMJL02g0JuokE7BlLj3wrpGp05PFTtjC0dtvUL9RJR2bil+hlwStaw+3x0O2kcY9AM1Xj0T0f8JG0HkjT33YUeveV+SxzjYK6fQTvf2M70bQi6Bfz7hcXC2Q/rAR/m3Kr5YeJxOneSt+8rxwZOsrEv21Qw=="}),s[19]||(s[19]=n("h3",{id:"null-safety",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#null-safety"},[n("span",null,"Null Safety")])],-1)),s[20]||(s[20]=n("h4",{id:"null-safety-features",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#null-safety-features"},[n("span",null,"Null Safety Features")])],-1)),t(a,{title:"Null%20Safety",key:"cdb80984",settings:"%7B%7D",files:"eJyFUktPg0AQ/itT4oEebD15aGKIz2hM6qGJF/Gw0KHduMw2y1DTNP3vzgJKwT647c73ZOcjyEqCXGkKh7CNCeQbj+FdOa0SgwWkisgyJAhUGgPJBuaYqdJwjV0rJ4M8QfeW3Vn7VUzghTiCmwpeY1ZOExsK46BBXHQYcTCscX/uM5WhGIudXaFTbF096tDE4vrwdeccjeaYho1Dm+Q2Y3RSJXWYI/H5TI9mrYszedrKa2Ug06TMvS2Jj2SCaAJX/WBPngWpp0moVuPUX/rWvISCRWPR2pPKcQKz6ta/Rxy8Wjaa4qBvORUkGKQFL8Vy64nRqD7veraVsLT0lH3xQ4899fvixfa1G+4xfak1tXxZrZoqCnSsLUFYFr6pw0zuN4OG4bPILmrSjGYjNG/YbfyMxtjfwh5fu8rsH3EwaCL1azw0yLZFg/PJdzEFnz/3IRI5"}),s[21]||(s[21]=n("h3",{id:"error-handling-with-result",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#error-handling-with-result"},[n("span",null,"Error Handling with Result")])],-1)),s[22]||(s[22]=n("p",null,[e("Managing errors in Kotlin can be done using the "),n("code",null,"Result<T>"),e(" class, which allows you to handle success and failure cases without throwing exceptions.")],-1)),t(a,{title:"Result",key:"35741eec",settings:"%7B%7D",files:"eJzNkF9KxDAQxq8yFB9SqG31sdgFYVfwdX20PqTtVALZpORPEUsfffMIeoA9x97Ek5g0W1zFA+wQyJCZ7zfz5THqrICWDaxFQgu4FyaBer7jAraoLTc3a2lrjisYKwEuFBqrBLAOSA1lCXm8VHwETdpRxq1CsnlpsDdMClJFazdGuxR6quD1sFeyiuI4SCdArvEfkLZNg1oTmhoZFiExZFAvukq4UwlvY0eZcMUjY6DcreoZUC4Or/IEro/KxUxYV/KW/MyW4iGMddLRkyzC5Qp6xYTh3srXxxtsD3uvpaaAi7nFuYEpOaXchV+YKaiUVH8on++wUQqtcohxbkh3bip9xmmGBdavhbMMbgdsPM7pwtuJuzw+ey8ui56+Add6yp4="}),s[23]||(s[23]=i('<h2 id="lesson-2-functions" tabindex="-1"><a class="header-anchor" href="#lesson-2-functions"><span>Lesson 2: Functions</span></a></h2><h3 id="overview-1" tabindex="-1"><a class="header-anchor" href="#overview-1"><span>Overview</span></a></h3><p>In this lesson, you&#39;ll learn about:</p><ul><li><strong>Programs in Kotlin</strong>: Creating main functions and running programs</li><li><strong>Expressions</strong>: Everything has a value in Kotlin</li><li><strong>Functions</strong>: Creating and using functions with parameters</li><li><strong>Compact functions</strong>: Single-expression functions</li><li><strong>Lambdas and higher-order functions</strong>: Functional programming concepts</li><li><strong>List filters</strong>: Working with collections functionally</li></ul><h3 id="programs-in-kotlin" tabindex="-1"><a class="header-anchor" href="#programs-in-kotlin"><span>Programs in Kotlin</span></a></h3><h4 id="creating-a-main-function" tabindex="-1"><a class="header-anchor" href="#creating-a-main-function"><span>Creating a Main Function</span></a></h4>',6)),t(a,{title:"Main%20Function",key:"7cafa162",settings:"%7B%7D",files:"eJyLVkorzVPITczM00gsSi+2UnAsKkqstAkuKcrMS7fTVKiOyVMAggIgtyQnTyNGySM1JydfR6E8vygnRTFGSRMiDyH19RVCi4H6FIBGleam5pUUK2SmAfXml2WmpKZA1AAFwDbpZRb75Ze45haUVGpowu3BapdKNUhDtEFsLcLC2pg8IFKKBQBZbz0E"}),s[24]||(s[24]=n("h3",{id:"everything-has-a-value",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#everything-has-a-value"},[n("span",null,"Everything Has a Value")])],-1)),s[25]||(s[25]=n("h4",{id:"expressions-vs-statements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#expressions-vs-statements"},[n("span",null,"Expressions vs Statements")])],-1)),t(a,{title:"Expressions",key:"5b13a1cb",settings:"%7B%7D",files:"eJx1UU1PhDAQ/SsvhAMczJLNnoxwM3HvGg/ioeogjTAlbWGNxv/u8CWEdXvoYd7HvL4+BUXLqJXmKMZ3zpCz2+FYQDnQZ2PJOW14BDpVwVPdkFW+tYQU+2RBtLszXma6QLRmZTgkMbxtCVQ5QqHkHmWN1ewrjvLg6FAaf41wcMmDeCT8BbrtiGc6LIkxO6h+r9hGD6z9pBiT9AOJsvjfl9rJHIrXr5rXLLzNiiFQb3ae6LGURBdK4rZ+ISsBDvtl+Ebu1erGC1OQUy+fCu/PJLlBgqsMecD0rrzuKA/OOGk6k77Imn8I2Yw3xumtyfAHA9ryB5uTtDCCP9suwslOagtX4YcqhBw8/wLjmrLY"}),s[26]||(s[26]=n("h3",{id:"functions-in-kotlin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#functions-in-kotlin"},[n("span",null,"Functions in Kotlin")])],-1)),s[27]||(s[27]=n("h4",{id:"basic-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-functions"},[n("span",null,"Basic Functions")])],-1)),t(a,{title:"Basic%20Functions",key:"23e031ce",settings:"%7B%7D",files:"eJyFUU1LxDAQ/Stj2EOLhT2Il4IHD4qLeCriwXjIbsduIJmWdKqC+N9Nk9i6hWoPTZiP9/LeexbbLVTadgbhdaAD65Yk+Rt0ThPfoTFtlsOnJPBfqBnKpAgNeGqdqaXIJX1Jv+ahbhMGvGs+Qqecssjo+ojZOETOyNdKqNiDNWvQBWzGsbM/wB3y4AjelBkwwqu6zlQJO+IC9uHMw/+HI20oOIf9jPpImlPLP2hyATL86Iw+aPYvmAx5wL5XDWY2npOMMsIsxKSpXxJWycYIlmTX1PIR3RrnP2wjjFWaFvGlSGMlBiLFfctGUzB7LHtPoR8sXAVLLwu4SI05pWqwJWz80LR04o8UN8m9IPl0aKFLil0SP896BeLlG/Pk5io="}),s[28]||(s[28]=n("h4",{id:"function-parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#function-parameters"},[n("span",null,"Function Parameters")])],-1)),t(a,{title:"Function%20Parameters",key:"60e429ec",settings:"%7B%7D",files:"eJyNUlFLwzAQ/itHGbTCVBB8Gfig24MDN2HTJyMSyHULpklNrs4p/ncvbdcyN8FCaXN33/fdd5en5PwcJpjLyhCU0ssCCX0QNq8sKK/fMQslohrBkry2K7gCkeQykEhO4EtY4KfkBBmbiSQCYtGgxnCJsN/CCssaC3yrtEd1IEJYlA9OyW3G705mWIdHMLV0RKYuBx1gEL/SKtCU8iliQOHKI4azPfWZ/gCXc64xGiH+r4Y85s4XkrJGNpDvumoiik0qvNmOGWZuq6IMI7hxzqC0bcXGebXESEyO0eO19G3GRmqjP3EsA3Ywnir5CoU9YnbRtkPcwIgnSx42mtYQdvyQDvb00t55tFNIbbOOl2fxGOKKdqPo3Lfe6pUzvj+IJBi3qUn7YL3g+jJQ5cngqdGv2NV0Wke3HnP91kUyc5Z/RDKEi8vfBHNGKZB+VRVoqQX3G2quwjRcT+T2jjuYu3tasxfmyqUJOIT0JW05/4U63C2bbKn2pszhhpoHnTz/AJWbGrc="}),s[29]||(s[29]=n("h3",{id:"compact-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#compact-functions"},[n("span",null,"Compact Functions")])],-1)),s[30]||(s[30]=n("h4",{id:"single-expression-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#single-expression-functions"},[n("span",null,"Single-Expression Functions")])],-1)),t(a,{title:"Compact%20Functions",key:"0b15bc96",settings:"%7B%7D",files:"eJxtkcFPgzAYxf+VF6IJmCWDuS3LEvSgHnbYRb2Jh8I+tAl8YCmKWfa/W0rnsgUOpM33e699r2/edIpn+mgLoZC3nGlZccJmhV3VpgW5md+tsWEd2D/2CcN8inSrGB1uMEv4kBihcXuoylpketTt3CY+Skd1+JH6E/q3JkjOSRFnNHhpJeuTl7O5dTbbShGoE6VBmoFvvlqhLvlumMnm6Zv4bHaNGeIY4QCUovOFnU6Q/lMyhy9whzSAABUNIe3PHwSS/eDYUa0k64L9xHu0DWCxxtXetbEIDokXXIKvNh7mPeiizkfBF5sLyx50GZej4KbBCmRy3hvSJV6NklvRocoRhRC8Q2Qv2zcQhROzcxLz0t77H3p7taY="}),s[31]||(s[31]=n("h3",{id:"lambdas-and-higher-order-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lambdas-and-higher-order-functions"},[n("span",null,"Lambdas and Higher-Order Functions")])],-1)),s[32]||(s[32]=n("h4",{id:"lambda-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lambda-functions"},[n("span",null,"Lambda Functions")])],-1)),t(a,{title:"Lambdas",key:"64d87984",settings:"%7B%7D",files:"eJyNkktPwzAQhP/KEPWQQFBRKZdK5QASAqlc6JFwcBu3teQ4ke20iar+d/xI0iePHKLEuzvzebSfwaIUyAgTYYRtImCefh9PRLE5OMlmKfGHa8KxIZrKF8bNG2Nswema8hHehMbto/9DHwPs2hGJlEk9cYUxBnf+vJBMaC7CJPBaNPXKI/S2BxZhNxvtkiDysx3hxLFhw/QKtCo4mzMNXRf0Iu5ghNBgRpbT4nb0F8F/AoSROUIc/J8xK7lmBacoiCQZNcNqT9oUa08ZW8QjVBJjZv8Jrs3HGeV7M44hiEjxYClbyXAY4+EvOJFfxFpKSjUTS4PlcKbaWC4dURK8Us5zLGSeNXtylQSnaK1AGBn332NR2sSaUaFPY5m2BedbuXWLYaLya+e7D9N4JnxecmJ9ocoM+QK9ygXTq7sYvIGkylgY4Qo3qM+lPlzdxOkbD6abSXcbpe0GmhPFcgGmoFfUNOhSCutSNiuJNp29w/EFw/sYQ5uUbw2+vgE0rCVG"}),s[33]||(s[33]=n("h4",{id:"higher-order-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#higher-order-functions"},[n("span",null,"Higher-Order Functions")])],-1)),t(a,{title:"Higher-Order%20Functions",key:"081a3956",settings:"%7B%7D",files:"eJx9kjFPwzAQhf/KKWJwJNqqYosEGxIMMICYMIPbXBML5xLZl3ao+t+5xElDaYvl6Xx+37tnfyaLBTzZokQ/q32OHjYtrdnWBFwaBjbfGMBMVROgMd5UyOg1SRmQ1nWOL6FQVSgyeGdvqbgdyhmoWEhh9jCcpWMT7DWBLI/c+lGoU0k1HTRpEm+vgsp/maoFH8SRbF+0FRJHFx636ANGYWWpaXnETLx76A/mQ3OuBBSvV8aSSkdDwv0I3QVnqlVuYnFrXGdxeWkkUd5H7a4WIW3ToF+bgKIr03QSjfSyI6WTx37WHHaWy4GSwc1+ylInJTpX66RPcpkedCJmO5E/Fo/ReNygl178l3XefpWbZSehXrLwTM4SnsR0zrV90xWMZA6W567eTWFdnXXVWsczS1Be+rHjZ2rQsLo7Puapqbf+WFxVGIIpEG4sH3HyTLKTrx9eJgj3"}),s[34]||(s[34]=n("h3",{id:"list-filters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#list-filters"},[n("span",null,"List Filters")])],-1)),s[35]||(s[35]=n("h4",{id:"basic-filtering",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-filtering"},[n("span",null,"Basic Filtering")])],-1)),t(a,{title:"List%20Filters",key:"b35d0778",settings:"%7B%7D",files:"eJx9kktPwzAQhP/KyAKlldIH5XGo1B6KQOICSAhxaHpwUje1mjiR7Raqiv+OE+dhCJBTvN75dmblJdnsBVLKRa+PUyBgvtEIC6p4hA1PNJO2eKAJxD4NmVSYIeFKP216Fz4mPi59XPm49nHTb3vZgYnHpr9SDi0RJ3CNc0wwm2GMT6vKJRc6Eb2A3BltLZnizEEFpBrROL23xHeut2AfecIjg86ppCn75j3PFNf8wP7xJKZ4EBqDOQTmv/l6rhiOtx/YP/0pbSixav2EWbZzNhkQQfVesoD4CEjIsySLj/VBrltwo33RVGrDfDPJFwZUFt0FL8erYr9e6HWTLMrpqkLY7ZlGE6jL7mZ6VYXI49oDT+3Kk2NrLzLm3VcSEMnWNov5GWSSirgKuqZyh+bWvQklj7cadclJb9pv6wl2lJt6GGVCm+es6rH9bvpKXnWWWUxrkb5hlxONkKy+APHTBBE="}),s[36]||(s[36]=n("h4",{id:"eager-vs-lazy-filters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eager-vs-lazy-filters"},[n("span",null,"Eager vs Lazy Filters")])],-1)),t(a,{title:"Eager%20vs%20Lazy",key:"0d073d01",settings:"%7B%7D",files:"eJyNkstOwzAQRX9lFCE1lVDLhg1S2CB2lVjArunCpNN0hDMOfqQqFf+OH2mbUCrhRWI7d+49nniZbRxDI4jzKRxKBj86IYHYWO0aZGugAEnGvmzyMutISVFmt1BmFUqp0jTsEqd57cgKneYtCfaSabJNz/kcnkWNGjYkrX/llUZh0QDjLuYANQ2uye/JfV8ZgDAWFUOwWW9xALLLuxUUBUy6CXynolYTW8keepj3ADfR6ZJqIb72RyhniGsw+OmQKzxDyKAZMwjz2svy6X+BhlHHEA8W3C+5nhR3qO1JCO+i+gCrYrPGaG9qERro/5dfzGxc5b3fr/S+vk9NhX9kb/3FCK1QLWphSbGBHdntCcacATQaJ0P4te4kaRjDPs0kcu0dH+H+2KgoaUSbvrvWZ1fCeIeR4NrxIjOuB8j+kAkuHtB7ZKsf2sf29g=="}),s[37]||(s[37]=n("h4",{id:"other-list-transformations",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#other-list-transformations"},[n("span",null,"Other List Transformations")])],-1)),t(a,{title:"List%20Transformations",key:"08f615d9",settings:"%7B%7D",files:"eJx9UbFOwzAQ/ZVTxJCgKIhCFyRYQGyIATERBid1WovzObIdGCr+nYudJm4r4cn2vXv33ruPrBsItFCUF7CvCfhcXcGL6MFbQa4zVguvDMXSt0CgQTfSOrgHVM6/dvl1CasSbkq4LWFdLMCNGRqUGwZOLZVm2j0oD5ewgt+I7K0ij5TX2VPE38HF1FlnE1syXGiZjK4zgaqVdVZCnTWmiZd2Jywq/k3EDH0vbStc1DOyzGqqucYZnKl6nxtZ2MJyoo0ze0bhvSQg6TxPaQ2ibMfo3Gl2b9InHpxMQixKiO+Q5eExFovETBdHJdmOlNX0nU/IxcMkLViYe88dPBrdKFK0BcM2w9oT7T/Gbo6i30lEExPnGjLheP0yHhXFe2/N1gqtmfJoGVa6AT1zBc74P56qU+iljVtBSVu/gwdYH5YSIP9tLQCcsZz/eQjRHWe2mOM4opSgjkmyzz8eFfg4"}),s[38]||(s[38]=i('<h2 id="lesson-3-classes-and-objects" tabindex="-1"><a class="header-anchor" href="#lesson-3-classes-and-objects"><span>Lesson 3: Classes and Objects</span></a></h2><h3 id="overview-2" tabindex="-1"><a class="header-anchor" href="#overview-2"><span>Overview</span></a></h3><p>In this lesson, you&#39;ll learn about:</p><ul><li><strong>Classes</strong>: Blueprints for objects with properties and methods</li><li><strong>Constructors</strong>: Creating and initializing objects</li><li><strong>Inheritance</strong>: Extending classes and implementing interfaces</li><li><strong>Extension functions</strong>: Adding functionality to existing classes</li><li><strong>Special classes</strong>: Data classes, enums, objects, and companion objects</li><li><strong>Code organization</strong>: Packages and visibility modifiers</li></ul><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes"><span>Classes</span></a></h3><h4 id="basic-class-definition" tabindex="-1"><a class="header-anchor" href="#basic-class-definition"><span>Basic Class Definition</span></a></h4>',6)),t(a,{title:"Basic%20Classes",key:"d4db252a",settings:"%7B%7D",files:"eJx9U11L60AQ/StD8CG9lHivcl8KPmhF9EEUivjg+rBNp3ZhMxs2uxaR/ndnd/PVKIaQbObjzJw5k5fs9BRWqqo1Qqll0wiKL7g1vkH4FAR8vUsNpdHGLmDlrKI3uACR7XfKociGEPLVGu3D9lnRxuybBdyR48izIUI1N8aupMYFXBmjURL7t1I3mGLSc+sJfL2RDpehaE64j4eu+qzrK1w1W5ymXGRPISU0F1sFZ+CkyxTZLGUcBPEtiFkvI8+9cjtOoMZZXzpOq6WVFTq0/Sge+WwojwzZ1XUxZ0YW5BsbmCfjT1HXuJPviou3OEtlS40Rx8qN8jyga+PXGns+gbi0KPNZ5xoztei8JbiXblc83sGfFqU/9AyPJ1lyWV9t0SKV+CvyGUNN0Y/HFvAqqSjvWw5sqo+0LRdpa/J21oMyyd1u0MlnG19Ew6HXpjOPpRfZWntesjZkqFlHUbhkq47ILrUqOXIO53+/NZCCQu2UVwQhD/Og3mDjj6GZwcY1zv9NAeOu4SbJ/zPC6NeJwjNOuwH/i+8dJldUPwCmlCItw6irafyRuKPEiegJgSXMXr8A8q9LYA=="}),s[39]||(s[39]=n("h4",{id:"constructors-and-initialization",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#constructors-and-initialization"},[n("span",null,"Constructors and Initialization")])],-1)),t(a,{title:"Constructors",key:"6c8f7c85",settings:"%7B%7D",files:"eJyFUstuwjAQ/JUV4hBaFCBqqwqJS+ml1/bY9GDAJJYcJ3UcQEL8e9deJ04qaHPIYzO7O+OZz9FsBmvJ6hqOwuSw43vWSAMV06zghus6VVv3+6U8RQcmQXKVmXwJb8pMwRaOYue/YQXJnIo5F1lu2urDfALnVAFeQgnTvtur0kIZqaJ0tNacGaEy2JSnJYzPtOhyGp/dBvtCUy/paEIDLvSg+75RcChlU/BogjupHe6IHz6pOVXYlKqh6gIli0py2JaqNrrZmjIIf+dbw1QmuZPv1b6WzUbyoVaqdUp7s6Ja7HgALMHkonbFKdh713PjROrvhmlOXC0exvZ+/Rj6a4M1074jHQP3PzYlEYsmLapX+o+abk8H9ros0F7DM5uamxahEOYM+u1LC6i4Fi56DpUggnjCvYfiZOehBRdMKMR5jtYNTM8C+2xcF3NMo00k5m8ASDzAZ2QFiPSIIBEBCx8oG0c7N27zFSI4wCdDfHIFH3h0J2fphpAt5jEyfoz7lL3/fdjzANDNssp6s5IpPA0WB7odyjliGQdCMZl0TeUHUWl7iNkf+G5NEowdLEvinuE0Ad0dff0A5/Z8/g=="}),s[40]||(s[40]=n("h4",{id:"properties-with-custom-getters-and-setters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#properties-with-custom-getters-and-setters"},[n("span",null,"Properties with Custom Getters and Setters")])],-1)),t(a,{title:"Custom%20Properties",key:"331da3c4",settings:"%7B%7D",files:"eJyVU8tO6zAQ/ZVRlEVyQSm3qLq6SKxakAAJIcGOsDCtQy0cJ7KdoirqP/ENfBkTx4+05ZlVND4zZ+bMmftozolScEOlqkSyIhIKJpW+JiU9gVstmXg6hC6MsK1oCm0uAL/RCKaN0lUJT1RrKvvoinAoGs6HKf1L9yEySeEU8ij2dBA7ijzqkb7+jaxqKvUaXphewnzIBkQsQG0RS1gwVXOyHnIbMld42AIrICkY5YuMqbOy1uskTX3nQLmiqAg+h0xkQ6F4Q70E7jNArGleM+QtkzQgNjtTTauybjRdQG3HC8oxwTQjXH2pXOuly8xfkm7i1mnoQ93MyJyLftF3tEQuohtJXfedYnMclDXIN6uaR06R4Cg7+vXI2081dq65SPJoSIqlQFcQm4S312kefSaRsRBZSiqWlGnX2r4Utnf4A/9HEziA4/FulWfKV0x8X+EAxv+Os78Tq1jRCCgJE4jxUnHASfBUMMveTB5dVkuRR4e4k1mF5rXzhPHP0U0gjBnjtk/PnMNwP3v4WW/f3ZSBqz/KuvCe8RnORgFuk/YKGkd1c4i1O5JQ2Z63hf+orSCXxt1j9YEF3E10L5mT/hTGE+e4wBy3Q9AG7YJAGwzWwPh5iPfL3lyZXnCP0cM7/8+PGg=="}),s[41]||(s[41]=n("h3",{id:"inheritance",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#inheritance"},[n("span",null,"Inheritance")])],-1)),s[42]||(s[42]=n("h4",{id:"interfaces",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#interfaces"},[n("span",null,"Interfaces")])],-1)),t(a,{title:"Interfaces",key:"a9afae04",settings:"%7B%7D",files:"eJylU02P0zAQ/SujqIcWQnbFx2VFV0Ish5VArFhuhMOsM6ktJU7lOC1S1f/O+CNx2gICEUVREs97M+/5+VumtCVToyB4lLglOJQa+KoHDaJrt4Old4ZwubqBu254auhi+YGMaolJzmvC8+oK7qcWAjVI3BFUVOPQWFDttqGWtEWrOp24K+qFUU/kOB+tUXoDayizr1L1wDdC74fdKysBeT5YHE6mPZZZqY8lMyZ9dwb3yNPNJVb8L/WIENFg38N7ZURDyx02YLBSQz+qWwHXu/b5BWW3I2NURZf28fif0Mri4R6eRb7p5ffYmbdM8JIR5yS/wAZN3i83n/MOQXg1wbDYfhEZRqeC7C8kLOpNVL5XlZWj8BzcL0lqI+3/muGJWUVg+xcHlgH6PEJXf+uAGYVxVjzF8cfiEDhSWhy6RaUZHVU4ydG89ZiJV8V1bOvTMRGvZ+69Lq5zeDMVhueWU2YbvSyzwHTjcuvfipR4niaCUvnE6xBTwz+CRl7vxdnajGG+nDT548WJ/6h6+9bv7y2ra/jrcx2Z8yQ8wgOoqDvzAYWEQzykL27D8qkilwQnxtcUp4c3h2nbL0pmgUiaee/4zr7/BIiim4k="}),s[43]||(s[43]=n("h4",{id:"class-inheritance",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-inheritance"},[n("span",null,"Class Inheritance")])],-1)),t(a,{title:"Class%20Inheritance",key:"40b309bb",settings:"%7B%7D",files:"eJytVN9LwzAQ/lfOMrADqT6ID8P5oAgKiqLii/EhttkabO9KEidz7H83adIfm2NOsA9pe7377r4vX/oSHR7COdcC0oJrDeWHNvAmoOTqXWTANexTJXCfobuFpGeRy7QQ8YwX8KY4ZiN4NEri9ABcqKRMFE1oCAuGYK+6fvKBoA1XJm7j7qpspikwZtGgxoNBjQFS+2yLkyQJi4a+ZOlvP3Cp+gMsVdU2WIcocUIWcQxrACxiaJMZejkuuIrXZFiRwKuSESk9gms0Qxi1EtZ1Ib+TaiaUkpn4XS7bGla5fUqTw6Bu5lv2RfRf5RSlkYRr3HuMbsmQSuftgFuJCZxKFI/yS/w3u26MjSQXXedlmoY5dvKM6/yZC1FIsbNjMnIC8qZu74d0DrTkEjtEp05qd2hcW4RFTzQnw1l0YA11wUs1d4/HAcafnJbwuL8JLLoizJrK8wf3cHJ0FCr9ahslQc1+wJ0J/77qGuftkdXQZXmfL1tGfu2GWcXtxVsNN1R0jf1q/zP3VMxLUlUuddmRnnmz2LNxI7U5Dd45swoU9v1uEtsRnYca7EavUJZMSF3yNIcFSNNMGjYlev0Gt3uTcg=="}),s[44]||(s[44]=n("h4",{id:"abstract-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#abstract-classes"},[n("span",null,"Abstract Classes")])],-1)),t(a,{title:"Abstract%20Classes",key:"2c80b8b2",settings:"%7B%7D",files:"eJylU01LAzEQ/SvjUnALdcWLh6KCVkVB8VDEg+sh3Z3thmaTJclWSul/d9L9bN2iYgg5TF7evDeTeffYzFjNIguRYMbAteQZE/6SCZAswzFMreZyPoR1KIFWA3cIk2PE0dSgPURSSMjYAqeqkLE/3EWV5+kpTJSMNFqEDG2q4jLunnJptYqLCP0muVs5cVgh/dB74CN4PM5g4ISOgMGg0hN6wz78Ixi2GsNg3RG1abCbri6Vo9yKMAIxPyRgmxi4KVFkLQiCLh/tUJZlvVVzf7ee47rULtwkUEvUmsfYLS9cQuhNmKREosgLsreH3Sv0Fv+mVHJUI9uiJmij9Ec/WxSpBJsizJgQxNRra8Ls/2zdo6B8EbO/tPWM6nPP1g7+b/2CRGk4O4dUFdr0Na+UwGXL6AzEak5iXEtD76aI41Xzzt2SGbp1laEupNwsULc/sjyJIOh87zZYtacNVH66j2s/O0FK+p3RBXsIaOhejXPP6nEHu8qxdUBfjYI01k/c2IsSckWeqFX2JfFJ18hxV6QVOqBa3rEohXUVgZOr3iasy+vANWPjRtLQSFaxQ5NJ2/v4Av7heUk="}),s[45]||(s[45]=n("h3",{id:"extension-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extension-functions"},[n("span",null,"Extension Functions")])],-1)),s[46]||(s[46]=n("h4",{id:"adding-functions-to-existing-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#adding-functions-to-existing-classes"},[n("span",null,"Adding Functions to Existing Classes")])],-1)),t(a,{title:"Extension%20Functions",key:"79bffe10",settings:"%7B%7D",files:"eJyVU9tu2kAQ/ZWRlSpGpaRQeEEBpEaRGjUKUpMqDzEPrj3ASutZy7uQpIh/78zaJhCcKvGDvZcz58zl+CE4O4PLJ4dklSGYryhxfmEKuCIXEZ/IoqPsNE3D1hC+G6MxJhiBWyoLn6AHoxF095GXa6S3oV8jiuht1VtXKFqUdOW6U2Bm1ni/VA5tHico3OVVRc2IXMtFFET82CjoOPMLF/gUttrAh0HrgPDRFOmFWZETJs65puHbLGx1bK6Vq7k+75PxnfqL/y/gWtmqb+d3Y7/jb8diYiidFjcrrUX1bsKiag6hFxZWGI+g1/KJPHRngNoiEKOP1PLC5Fi454jWsa5L0rF1F8u4GIK8JxEBPwvkCisdHkuWu2euwbOW/F5MIy3cEr5AdyZaknkWK54gbEoaVv9tpdt4VLEF3nijCDDnVJwmbt2VhQGYNJ3AyWZQm2fr53AE7AOyYQTZ35nnBfq+FGrXCFa64hjHhUfBD9TawL0pdAo/jdOKeK6vcpgWaqEo1kM4PZHA04Y8bww87gwowI0gG6y5bYpm/RQScdyQy/SRex5s6ss1zxMSHmWcOOSpVlH1mD/QH2lP6cm6ObTK/mBhuT+az6fzsNuGXhu+taHfhkHFK0AUx0gsQ3frcx73ODxQf0n71tuczYUZlsVWYq9+gKaSD2NBUanpkxSmXQaNXNuIgtk/qpWZIQ=="}),s[47]||(s[47]=n("h3",{id:"special-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#special-classes"},[n("span",null,"Special Classes")])],-1)),s[48]||(s[48]=n("h4",{id:"data-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#data-classes"},[n("span",null,"Data Classes")])],-1)),t(a,{title:"Data%20Classes",key:"a13c060c",settings:"%7B%7D",files:"eJx9U01v2kAQ/SsjCykgWY3NhxQi9QCt0ubSRP1QD3UPiz3gVda77u4asKr898x6DSYxhIPBy3tv3puZ/RNcX8NnZhmkghkDrLKqYJanTIgaNihRM4sGrPphNZebEPBfxYQJIWcm/6QyDCFVZZ3IrBN5FKxGPdwyAZIVeAsHrjsxqdJ0dC+tfxe4RdG8w0eIR4l8LaW4tI3S/oRTN78b7LqSUDAuhyP4n0igjwOUjYOYFFsvSbAQPMUkCCGOoiiEGbFfo8en6KVaOezNLOrhJoRr9T+46MMmkTM/jg5o/ywptRWS5LwuxLcwaKlJ0EJ7oPERNL4MmhxBkyPIP9080VhdpbZyXe/sD90wQj+A0Pd91GV5W6gTwYyKOa6bOQx83NINhvbFeiEYNF99L78MeYBHxjUwmcFPzUuBnaeVUk+LyuZKu+4TiirH85upa34SfEGlNwgPeoei0z7w7uVaEctLvsejmc+n8wujWZIS5euMnGm6w8CO2xxqZLpFu/KX8l5ZdQVcrvkeaEFTyxWtaj+zWznaTMkLOr5jukgCumn9AGf9uD05kepb+a30kzPTGC9YaToLdM2JY6g8nT+sh/6fht228ayP8BS31GyL8A13rpDIDpSFyFRl4Gu1F1i/odyxXKPMkVuYzugKeMZ3VgOJZatKE8HjeyPwKQ1lbr03eZ8TGfx9AQfogAY="}),s[49]||(s[49]=n("h4",{id:"enum-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#enum-classes"},[n("span",null,"Enum Classes")])],-1)),t(a,{title:"Enum%20Classes",key:"77619b58",settings:"%7B%7D",files:"eJx1VO1u2jAUfZWrrJPClrqBQChMnUTbqK220inAumnZjwAGIiUOchzaCfHu8wex2zRFEOLj4/tx7r3+Y2FSZrBI46KAqzzNqb2LU6BDuCPMAfG+fvE+l+8t2EcE+CcMru1Or+eAy78tR4E3YRCMbY6onQq+/D4LBKo2KvTx9m4aKBvVwxwYXX07nnBbXxSonquSAMtv8bPdGsKE0YSs4QIi68NHt/Or+kUWWuU0i5lNHVg7MG9F5BCRiLzI+DqheMGSnFQZjR/C6a0Dk4eZ+AtGk6kDj8Fk+sZ9vt3mRcKwiMBYuYCnDSZgs01SaJW0XTj9qiwbXC4FLgkGF54FLHwbVKwEKnYVyhOq5/QjjQlmsowZX/Pw8nKeYlVAGi+TUmM6xPsgvJqFv20Pea6HP3c8XgnU9QZ97Ffl+BmMZxO7i879ASd0HfCR22ufG0Iw4hnYPTTo+xXB65+3u4ZxPwonto+6nbZywb0N+h2+/0bdoqSreIFvaLxL2D+psQyYC+wjv++5bnDabsMnmSGcga3y4oB6qUotbGVxQmyd6dkZzArRL7LZQeimNra8i1hK7MgK8RLCm8shnOwlCfE2R/TgvFqva+v5IbK419eWLtMSwwY/G1NiCtCxdc2JWmimn5rCG+eUbXT/CdOaj2QXIdOb77pQTdJoP4iF/WMFYK1KINyoM0jWGdUr1ODpjmEaM+Et32EltejBEhd1l6M0hYXQpxhqM0ovxbdbYpSDeLGBvSLyKTBjYQyd7OUuInGGDyJmtXwjOG+OBlFkhAlRM4yftxQXBVdVscT0LF8Mek10Q8p4thkmTF8G+tSrG6F2Xox1ZN3nOxFIuY2sJqa+LTRzmT+RZm51g2gqTdYb1syt7hXNTfFKU49aGZH1OS5wlaxUljOtv/8BQFbeww=="}),s[50]||(s[50]=n("h4",{id:"object-and-companion-object",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#object-and-companion-object"},[n("span",null,"Object and Companion Object")])],-1)),t(a,{title:"Objects%20and%20Companions",key:"1c957a28",settings:"%7B%7D",files:"eJyFVGtv2jAU/St3qB9C1wVSxtaioQm1XYXUB4J21bTsg+OY4sqxme10Q1X/+65DniVoEUpCfJ/nnnt+dno9WHD5KJhVElT0xKgN5fYJZ0TQVBCrNLyEEvBaphJIHHtkBFNpjyDKnt3sDmMg8B6iytKkkdWE2v3mH+rmSSosX4vNfvPDunnMn3nMdo3PVRoJ5ux9q7Z/vC70nOtrKEOJHd9u+2N/15oZw7Fzj0glN4lKTQ5Ct0ThnFgSEcPOlFzyxwIJqqSx8EwE3M+vMFnYeYojOko25rcY9XpCUSJWytjRYND/1Es2cRR2djwXF/ObyfVF5k7ihMtdm9lksXi4nZ9nNoZRzWxhVEHxyCxWJ7Fa7GVhNQ7UQyS2b5nnAVb5NTVMjw+KrC5MAciZIMbAH25XmDpZE+kwKdhAs8NrYlf3lgtTIdA0LL6/qX+K+Qd+8DEYnradu+aP/c/ByfFJdVy9ue4o11SwiWbE0yTmqSlmXB825jmE7XH50gyzRCYqzYnwZEGVK5XBw5fgSfgyhqALATBhGEgMUnNAogbICBcKIWuCz7EVIim7ZnalYqRaDYc1DsAK6YWduxU3gD9SOUCSeYSdKnIxjxuSsHjvKGarjeHULDbGsmTvOB6UFjHSwiWz5dSa6F/OJ9+ndz8Qg1O/hn+NojfTu4xAWKvmtKBey5AwfWrZN6Up8xKsspjNERBKmWCaOHLujq5Wl7uQ36lGLXB9HjZcK7t8BAVemXYQLivoEcF746jvbk1pa06lUrgRDFG8BtjrwUv11XdiNzyCQfe1HFO7d9BHidlxzzUq6DdDvKkyHxiijgKT1rutchUq5ORmhEmaquTj19YKS1UAk4lBi2ureOytdZeTzYyzqUtRioU/m7bWla00ENxp8PR4iHSoO9U2fuj3W7EfvsuwrnyqbR22Vb9AIwEU1w8llFhWbmGuEo7sSSlx40ruvDxSeei/XfhWnOSeDW52canJM7cb131jqf3m8vr5nrYBkW3cfwM01jPo+0hI3PgcKNyizq9/3/CQmw=="}),s[51]||(s[51]=n("h3",{id:"code-organization",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#code-organization"},[n("span",null,"Code Organization")])],-1)),s[52]||(s[52]=n("h4",{id:"packages-and-visibility",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#packages-and-visibility"},[n("span",null,"Packages and Visibility")])],-1)),t(a,{title:"Visibility%20Modifiers",key:"6c263f1a",settings:"%7B%7D",files:"eJyFVMtOwzAQ/JVVL7QH4I7EgYeQEM8D4kI4OMkighw7SpxKFeLfWdvrxnZC6aGK7ZnJ7uzEb6vTU3geS9lUUO6gxg8xSlOoSoph4IMr9/xdKKDfVkjo3PZzrzvszQ7OoVjdHrW8Xaw80P93fbMVBj3NP895fj8naoOVwZqpvFog80lKb5TBXhHTssNiRg4HKfdjVNzLzagq02i13jgK+0Tnbne5U8f2zzl9QizyQ8NegVczjQi1oLLv24qERaZxG2H2Ej+FKhTZo8CP/lIMmAz+j4G8Cjmik72oKhyGppQIRsMwlk4Ih1DgQhQm8qM2IP4ROOjTA5pPXVOHXC6/URmp1rFtrcNBJaS0mdl4NHXvDPC9XyOVh7Vv/2yyYlK3r/bl7pWXX536tAH62p7uYlhefgag5SQ1eeZwV7rtGinsBAH7XvdpL4R40d2xxC3uDZ9GruK8Gt3dWxgnlHNCbEjYdhCZbpw3Fk4iGJRD5mbS8SdYKEtpRWOTGt03uvwiVnQZrXlswRoCnKSXEgMi+xwmvYEOuRjT8vuDp0S1wyBahFbXo8Q4pLbq2qeIKo/zFErn05NZirI7xRUxdzEzYDZAOqcQrN5/AXTt/6Y="}),s[53]||(s[53]=i('<h2 id="lesson-4-concurrent-programming" tabindex="-1"><a class="header-anchor" href="#lesson-4-concurrent-programming"><span>Lesson 4: Concurrent Programming</span></a></h2><p><strong>Kotlin coroutines are a powerful tool for managing background tasks, making asynchronous programming easier and more efficient</strong>. This comprehensive guide covers all aspects of concurrent programming in Kotlin.</p><h3 id="introduction-to-coroutines" tabindex="-1"><a class="header-anchor" href="#introduction-to-coroutines"><span>Introduction to Coroutines</span></a></h3><h4 id="what-are-coroutines" tabindex="-1"><a class="header-anchor" href="#what-are-coroutines"><span>What are Coroutines?</span></a></h4><p><strong>Coroutines in Kotlin are a powerful tool for handling asynchronous programming, enabling developers to write efficient, non-blocking code</strong>. They are lightweight threads that can be suspended and resumed at specific points, making your code more readable and maintainable.</p><h4 id="key-benefits" tabindex="-1"><a class="header-anchor" href="#key-benefits"><span>Key Benefits</span></a></h4><ul><li><strong>Lightweight</strong>: Much lighter than threads in terms of memory overhead</li><li><strong>Non-blocking</strong>: Don&#39;t block the calling thread</li><li><strong>Sequential Code</strong>: Write asynchronous code that looks synchronous</li><li><strong>Built-in cancellation support</strong>: <strong>Cancellation is propagated automatically through the running coroutine hierarchy</strong></li><li><strong>Fewer memory leaks</strong>: <strong>Use structured concurrency to run operations within a scope</strong></li></ul><h3 id="coroutine-builders" tabindex="-1"><a class="header-anchor" href="#coroutine-builders"><span>Coroutine Builders</span></a></h3><h4 id="launch-fire-and-forget" tabindex="-1"><a class="header-anchor" href="#launch-fire-and-forget"><span>Launch - Fire and Forget</span></a></h4>',9)),t(a,{title:"Launch%20Example",key:"12a1b1cc",settings:"%7B%7D",files:"eJxFj7EOwjAMRH/FdCoIpWVFYoGFhYmBgTBEaaFRXbtKE0GF+HcMhfYWW9a90/mcuKZlH6DmgI4eyrLnGByVnVpo0nSNBI1xlM5hAz7SFtnWjm7w1ASiLINjMBJgYETh7kIFaCLZanAN+5/5qCjR9Okqz/P5dGy9o4CU6mQ3ZnWm79awLxF5CSf2WMx08mNew5iwgzQFqWyDY5JCJBFRXlHqy4g/ubwBqFhPqA=="}),s[54]||(s[54]=i('<p><strong>Characteristics:</strong></p><ul><li>Returns a <code>Job</code> object</li><li>Used for tasks that don&#39;t return a result</li><li>Fire-and-forget operations</li></ul><h4 id="async-result-oriented" tabindex="-1"><a class="header-anchor" href="#async-result-oriented"><span>Async - Result-Oriented</span></a></h4><p><strong>Launches a coroutine that returns a result asynchronously. Returns a <code>Deferred&lt;T&gt;</code>, which is like a Future in Java</strong> :</p>',4)),t(a,{title:"Async%20Example",key:"140cac96",settings:"%7B%7D",files:"eJx1TzsOwjAMvYoVMTQMVcuIxABXgI0wRG1AUVMnShw+qrg7CQUpDHiwLL+P/Y5Mj856gsGS0XivO+ttJI0q1EuBAkMMTmEP54jglD9bPx5kGCpKbQ178hov/DvAJBBS9crIR9U2TcPnhVcUPYJgWQuLLIbOjs4oUr1gAp/5Vr4xSo0Vhw34iDtju6GwvUoDWdomWIYHdjD9/CTYVjAOyatkr/6ydwV77i6lIIPvdG0tb1JTxT8ZSmxVYMmAnV6s2238"}),s[55]||(s[55]=n("h4",{id:"runblocking-bridging-blocking-and-non-blocking",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#runblocking-bridging-blocking-and-non-blocking"},[n("span",null,"RunBlocking - Bridging Blocking and Non-blocking")])],-1)),t(a,{title:"RunBlocking%20Example",key:"77a1103e",settings:"%7B%7D",files:"eJylj8EKwjAQRH9lyan1EKrg0YvfIHgwHkKa1qXpbkk2oIj/bhS1J0+d2wzzBuakcJw4CgwsAemqHUfOguSTXhky1GWC0SJVNewgZtoHdgNSD3dDUBRsJnf5updaH+yt2jZNPWdTRJJAlVEHmwZYg+NxCl58a9Sn9liwt/m/NzePFsuvHjqOIIVKIPzjtNZvslDq/AS1jFbb"}),s[56]||(s[56]=n("h3",{id:"dispatchers-thread-management",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dispatchers-thread-management"},[n("span",null,"Dispatchers - Thread Management")])],-1)),s[57]||(s[57]=n("p",null,[n("strong",null,"Dispatchers control where and how your coroutines run, like assigning them to specific threads or pools"),e(" .")],-1)),s[58]||(s[58]=n("h4",{id:"types-of-dispatchers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#types-of-dispatchers"},[n("span",null,"Types of Dispatchers")])],-1)),t(a,{title:"Dispatchers%20Example",key:"1a9759f0",settings:"%7B%7D",files:"eJylkb9OwzAQh1/lFDEkSE3LA7BAhehCGagYCIPlXForzl2wz4Wq6rvjJv1Dq3bCi2XZ9933830kpmnZCdQs1tBPrtlxEEPo89uCCqoCQaMMpRncgwv0YFnXhuawLgjiGg5hjJUKVqA0vlWiF+hgAI+vs4EhQfJmifDNru7fWxVIL9Lx4a3Pd/XZHrnDPqNarkBz0wZRYjjK7G9bF9GW0iKJbTo4MMHN+m3hUJW5Ds4hSX9Ks5xUg5siyXrApt8O+pPpqfkLypY4fDIWgVt0XXN/VX8yPTffEcDhV0AvwA6qE9ilJFHjn0FmpJmqOLryLBBLVIkf2SCV8bKKPnOk6GIheLwa7Mg7CXhU/tOwG/BFsRKtWqV3o1G2dXxXRjoBZS2I8rUH4W7IFiWqxNLk8xc4Adkv"}),s[59]||(s[59]=n("h4",{id:"withcontext-switching-context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#withcontext-switching-context"},[n("span",null,"WithContext - Switching Context")])],-1)),s[60]||(s[60]=n("p",null,[n("strong",null,"withContext() calls the given code with the specified coroutine context, is suspended until it completes, and returns the result"),e(" :")],-1)),t(a,{title:"WithContext%20Example",key:"2e5cf46d",settings:"%7B%7D",files:"eJx1UT1PwzAQ/SuniMFhaMtaqQNQIXUAhqoTZrBip7XqnCP73BYh/jvnJG2hhRtiRfc+/J7fCtu0PhBsPTmLh1Hlg09k0cTRrUSJMcXWoIY6IdSGqs1T8M2Lob0PW1FOYUnB4ho+JQKPNk59iLvJZFLCeAxL2ySnyAD2hH7fQ4OhFBBkMVekoGbVI0oWEr8uvVOrWWi1EHyoo2159G35jxwKWawWA1TD3tJmCjeZIIvyD80uT7a/R71UOyNOejvlIPNg1qk8eiRzIDG3sVXMMSGOFq8ndB5OO7QClXLuvLgurd/xbfLRf/8zmZtaJUeXTqsuIXBWkWKuf8CBxUhGafA1PCvLCX2Alitf86OiHpzz/KrzfKOuolxNw2yuYwYh4YPz1fbHI1/X1hGL929wj8Ww"}),s[61]||(s[61]=n("h3",{id:"structured-concurrency",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#structured-concurrency"},[n("span",null,"Structured Concurrency")])],-1)),s[62]||(s[62]=n("p",null,[n("strong",null,"The CoroutineScope is the foundation of structured concurrency. It serves as a container for coroutines, defining the scope within which coroutines are launched"),e(" .")],-1)),s[63]||(s[63]=n("h4",{id:"coroutinescope",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#coroutinescope"},[n("span",null,"CoroutineScope")])],-1)),t(a,{title:"CoroutineScope%20Example",key:"3cd4eb89",settings:"%7B%7D",files:"eJxdkTFTwzAMhf+KLlPKkIaBkYV2ZGNgIAw6R0l8VeScI0M5jv+OG7sJVFNi6+l9z3or7Dg5r3ByylbOlXHeBbVCc3XXSCNdEBjRSrmDR/BBntiZk5UevhuBWPs9HDxhVPSAcLiqX4ybKHV8IC8TlqM45H9PebTzhGoG8nN1pA4D6y4JV4NnDGKG5LDywafVeAY6EMyb2+pU8aK6cl6qJcav8r6u6+xwqclbUZayKVYwoDOZoNSCS/MzV/yOUdumyPKfG85XtAqd838g1cWfcWLSzJcZHlaG7RlRDHFcQr94kqj1ORqY5W4GZIaUK8Jtq7qNntrL7LAlTCtIt0wpSAxRvP8C0g2sng=="}),s[64]||(s[64]=n("h4",{id:"structured-hierarchy",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#structured-hierarchy"},[n("span",null,"Structured Hierarchy")])],-1)),s[65]||(s[65]=n("p",null,[n("strong",null,"With structured concurrency, you can specify the major context elements (like dispatcher) once, when creating the top-level coroutine. All the nested coroutines then inherit the context and modify it only if needed"),e(" :")],-1)),t(a,{title:"Structured%20Hierarchy%20Example",key:"1442dad3",settings:"%7B%7D",files:"eJyNkE1LxDAQhv/KUDy0IqUfeFlcD+pRENyj8RDSVMKmk5IPtSz+d6fGrovbLptDDsMz7zs8L4nqemM9bI3XCj9zYawJXqF0+SVDhi64XmIDbUDQhjcP3PMyzVaw8VbhG+wYAr1Gaj6kZVEUWRxY6YNFYMm4AK01HTgTrJBQsoTh11J2tZh9fUZ2dTK7Xso+J7o+GX1vUARrJXo9jC2PyvmbWHULa9hb3QjTy6n8nWs6oJW015REcTeggN2hZ6DG/2g1g5K2ObSeQcnChMZf061Pbbq/JOcfXPk0u/prPB7V04jE/VgZbXRcIaWvwQa800ZsD0yPZ1npgvaOgHlvkezJmteYsuQ58iu4+N1kSaxLXr8B4gPqJw=="}),s[66]||(s[66]=n("h4",{id:"supervision",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#supervision"},[n("span",null,"Supervision")])],-1)),t(a,{title:"Supervision%20Example",key:"40047be7",settings:"%7B%7D",files:"eJx1ksFugzAMhl/FQjvQHdKWY6UdtmlP0MMOY4csmJI12CgkXauq7z4yChTK/gMCY/v/7OQj0mXF1sGendF0FIote6cJa/GYUkq5JyilpngBT2A9vRhWe007OKcEjSqryRmK02jrpG0Kd1D7Cu1B15hBrbhCIUQaLdr09tllsN2GhK5X0EEaUIU22brxM9KTKm5/Bzl7moaCMjTyFK9Xq9XVa1RTWP6Bt6PCymkOuK/BBNaQS20w6wE7XUBJ13jHuBnKFnO+wwbGLTfwcEZRYl3LHV7uDYbPm9eZRST/LqKdOLmfeIqUgOKyMujCkXilGqbcG3MaQc1SLJfwLrWDnC18sStaJIsEjvumQ3p7cuKbw4WZhJNR+Oo2vUTP5jp1sOih/zibiujzF9qqxpM="}),s[67]||(s[67]=n("h3",{id:"channels-communication-between-coroutines",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#channels-communication-between-coroutines"},[n("span",null,"Channels - Communication Between Coroutines")])],-1)),s[68]||(s[68]=n("p",null,[n("strong",null,"Channels provide a way to share information between different coroutines"),e(" .")],-1)),s[69]||(s[69]=n("h4",{id:"basic-channel-usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-channel-usage"},[n("span",null,"Basic Channel Usage")])],-1)),t(a,{title:"Basic%20Channel%20Example",key:"11e5896d",settings:"%7B%7D",files:"eJx1jz1PwzAQhv/KKWJIGNKyImCgCyOCoQNmsJxra+V8F/mjAiH+e53GkdqqvcGy7Ofee+6rsm4QH6GXSJZ/WiNeUrSMob1XfPvT7DQz0pFSvEkMTluuG3gGn/iVxPSWt/CnGHLtNUHpyMBquj19Rp+Zl7qZoOlcLODdS5cM+umBdGKzm5PGKkltQO5qVb0hkaiqpFwB1uKpuwoYkoDz/P8LjZVwSO62xkY81A5D0FsEy3Noc8qMNeQtI3EW+UCDdo/dI9yVvjOrInDm0SHp3/phuWxGpbW28ThXE0HUoQ8QBYy4gTCi4txafR8AjMWSZA=="}),s[70]||(s[70]=n("h4",{id:"channel-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#channel-types"},[n("span",null,"Channel Types")])],-1)),s[71]||(s[71]=n("p",null,[n("strong",null,'By default, a "Rendezvous" channel is created'),e(" :")],-1)),t(a,{title:"Channel%20Types%20Example",key:"a7fe2ad0",settings:"%7B%7D",files:"eJyNk01PwzAMhv+KNXEoSAw4wGECJBggIcGQNiYOlENI3S1a6lRNOjEQ/x136zfrIOohafy8cV47rz0VxSZxsDBOK/roS5OY1ClC2z/wqXtTzgUR6nWUT2FKEAlF3j58+QQ8kpSutZELRbPiVzaOjuBGhSEmSA7cKkYLJoRCrIpbCg0cE+Dn0qR2uNmHC8hn5xOXsPKlt99E3tO1dtANnBy3EGko1MLtYvJ1f/g0unu4er69aUmkpFWk/iUxHT3cP943JapZzMFOk+f3hglmOUFQmpV7tDFt4PdqAhV2COPStJLwpIiFVG4FfPcu7jp3bguVWdaFDQv3Ki5bWpcZkyIY0qtueloYV9Gll1Cc38SbrYSRIesSwT05K4tfiFWhWqQk5/U+XLcoxmyyd8o9CwoOL5u72Wi1U9+yuZz4I1orZgh7qpHa7xtOuHAD2BH+3Vy2z5PaWKz3eC3+r9uFJgEvyo9W1NYuH+r2zMcoUS0xGMBerrH1qgFqseI3VX9UrTy3przhzpjLyvgilFvnK7QGE2NWT64rOMOvM4o1OtygrMVf7+0HMZxriQ=="}),s[72]||(s[72]=n("h4",{id:"producer-pattern",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#producer-pattern"},[n("span",null,"Producer Pattern")])],-1)),t(a,{title:"Producer%20Pattern%20Example",key:"748886dd",settings:"%7B%7D",files:"eJx1jzFPxDAMhf+K1SnlpOpuYAMGmFgQEiNhCKnhonOdyE1KEeK/kyMt7QmdlSHxe3n+/Fy5LniJcPCRHI+N9eJTdIx9c6H5vGj3hhnp16X5LTHczeKT9QGbIL5NFh9S94rSqxquYWpd3XO8gS/NkGswAmPWduX5sXeEoKIkrGfLsXrkVo2bTb20WiTzqXbb7dT71pxPYemM4zxyCpDEt+TtwfH7OnMwBFzwFrg/3sW33AQDmqguT9COFcRxJFZTXCNo0Q2o6lVMhvufOH+whi3SeuocqavHQiZQTIStrk52rl5+ABsBjhc="}),s[73]||(s[73]=n("h3",{id:"flow-reactive-streams",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flow-reactive-streams"},[n("span",null,"Flow - Reactive Streams")])],-1)),s[74]||(s[74]=n("p",null,[n("strong",null,"Think of Flows as streams of data flowing through your server-side code, like the continuous stream of orders coming from the tables"),e(" .")],-1)),s[75]||(s[75]=n("h4",{id:"basic-flow",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-flow"},[n("span",null,"Basic Flow")])],-1)),t(a,{title:"Basic%20Flow%20Example",key:"ab9f2566",settings:"%7B%7D",files:"eJx1jkELgkAQhf/KIB3WICm6SXnoEHTt2nYQHWNwnJV1tUL6762VWIeGgYE3H++9U0BVbayD0jgmuUWZsaZ1JNhEcy3/nwWb60BoKVqBxoOMe6+pMIbhbg7iEtjCwEGvBfwUxoIiIIFVFK3DUR4mR07varVchpOGFTlFH+Ghxe87rUpJVOjNbSs7NllJchnNvpv4vsyYOeihS7lFWCSTe21JHIvSwREzpA7zGGYvTAc/mcH5CYxzXvw="}),s[76]||(s[76]=n("h4",{id:"flow-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flow-operators"},[n("span",null,"Flow Operators")])],-1)),t(a,{title:"Flow%20Operators%20Example",key:"db685066",settings:"%7B%7D",files:"eJx1ykEKwjAQheGrPIpCK6Vo1Y3QjRcQ3BoXJSQyNJ2UdIJC8e42dNONj2E23//IqB98EHReHPGn0j74KMRmrHaK/6N1/p0KxTYy+pY4L9AgRL46rzviFybFmJfKm80PJeoSxxKnEudiobTKkhMTMIEEW9RoGuzxXQV9Oyy6S28t2jtntMw6BGJxnKvsbsbo5IINicqKlM+XPX9RG0jy"}),s[77]||(s[77]=n("h4",{id:"cold-vs-hot-flows",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cold-vs-hot-flows"},[n("span",null,"Cold vs Hot Flows")])],-1)),t(a,{title:"Cold%20vs%20Hot%20Flows%20Example",key:"6da388a8",settings:"%7B%7D",files:"eJytUj1PwzAQ/StHxJAiEZqMiDAAQjAwMTAQBidxiVvHFzkXCqr475xDPxLqIgasLH6+e+/d5T0Hqm7QEiyQtDLvUYEWO1JGttFJZg4/zjQuXUVmzs7gGnUJt4zAKbQkLLWwrKSBArWWBckyM7Ouv5auKpxACo4AVpkBPo1VhrQJs6Bn6p96Hu4MJt81slYUxsNLwpdP58Bx10IZ5l0T2s5caSwWyrxuoLFOmqYD1zeyRmBoK+bOzi3P3c8BK6/TN6E7eQ7Hirgf2NGGwSecZcZp3yH9Is2M0FbCyt4AL+uhI5Fr+bjFLu4NXYaDlnHzHPOY27ToTFENN+DOjjkisZC8x0MDOgwtxL7hvHOutZP/007+rF1KLT7CeDqdAEfySSiCGROs6dG2QAi5hFYSdI2PYWBulDbfmwvfPsNQOEeqfqgXWDdaktw1uB8VzdFldwQme6AvTH14NqTl0TZDvB/+gpcvsUwp2Q=="}),s[78]||(s[78]=n("h3",{id:"exception-handling",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exception-handling"},[n("span",null,"Exception Handling")])],-1)),s[79]||(s[79]=n("p",null,[n("strong",null,"Structured concurrency enhances error handling by propagating exceptions up to the nearest exception handler in the coroutine hierarchy"),e(" .")],-1)),s[80]||(s[80]=n("h4",{id:"try-catch-in-coroutines",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#try-catch-in-coroutines"},[n("span",null,"Try-Catch in Coroutines")])],-1)),t(a,{title:"Try-Catch%20Example",key:"209cde66",settings:"%7B%7D",files:"eJxdkD1vwyAQhv/KyeqAq8glq6UulTp06dCOpQPGNEHBB4IjjRX5vwecOInyDnC6j+de3U9lBu8Cwc6RNXholAsukUEdm2eBAmOKXmMPfwmhN3vT6880dDpEJlv4QFpBN//1/MJRIGT12sqRrTnn9TkRNKWAIOEFOoFTIRfiIA2yGl4hJHyzTu0MbhYGhXEJi/bSZkpMlnL71eW3cl7ftxXJOKKC44PfNV8Br2Fq5L80xC7GirKdJfTBIFlkovqad7XwdF4qqsvABEqS2gLTLbwflPZkHNb3Fm6Maz3PpM220PQNNN+h+j0BXRR6Wg=="}),s[81]||(s[81]=n("h4",{id:"coroutineexceptionhandler",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#coroutineexceptionhandler"},[n("span",null,"CoroutineExceptionHandler")])],-1)),t(a,{title:"Exception%20Handler%20Example",key:"792b2cfa",settings:"%7B%7D",files:"eJxtUE1PwzAM/StWxaHjoypXJJBgQ4LzjgShKPOSaK4TpQ4dmvjvpHTdOPAOieXnZz/7rfJdDElgF4Q87xsTUsjiGfvmUrHibWbotOd6AfeQMj9RMDvPFg6KoeBTEzjNG8JUCpaz+nlvMIoP/HLkDvBxDThn4eZhko+IybMQ16pa6mydnMvu4OIUq2oxSb6n7zy+NyHi3+HrMVGvfB+1GIepb1a41ZkErmavx17T+9ugIZ3ZuHmvEeJSGOCVCK2mx2RzhyynzYrfdehQ3HiNoTAwpMD2f58bJP1V37ZtW9jCVO8/t6V+Ow=="}),s[82]||(s[82]=n("h3",{id:"cancellation-and-timeout",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cancellation-and-timeout"},[n("span",null,"Cancellation and Timeout")])],-1)),s[83]||(s[83]=n("h4",{id:"cooperative-cancellation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cooperative-cancellation"},[n("span",null,"Cooperative Cancellation")])],-1)),t(a,{title:"Cancellation%20Example",key:"678e8c36",settings:"%7B%7D",files:"eJxlUcFOwzAM/RWr4tAiEXVCXJBAgonLfoAD4WDSjIV5TpQldNO0f1+ybmur+pDEsf38nv1VmI2zPsDaBjK8E8p6G4NhvRX3kiUvI8MGDZcVvICP/E5WrQ3/wkEyJPtHgj/7k4KEkdXq+p8t+P3Qzea10xjKWV3XFRzAwMPrOCGb84YDcSmLT+vPze6MEEIW1TS30YT78inBjWPH3j2CwpCYlfoZ5shKE2Ewlj92Srv8SEzGxT2BRZLW4jYhnOt0MyERVt62oIftloaRaKK9R52TRo4O2iRvBHhhfbm6s1M4e7xJHOB0rPKE0g6GI8pux/mNm4XN+5OcYIvvE8fYjcY="}),s[84]||(s[84]=n("h4",{id:"timeout",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#timeout"},[n("span",null,"Timeout")])],-1)),t(a,{title:"Timeout%20Example",key:"17cdd602",settings:"%7B%7D",files:"eJxlTkEKwjAQ/MpaPKSCoSJeBD0o/kDwYDyEGHUx3ZSYYov07yalWovDHmaZndk5JpgX1nm4W2+QKq6ss6VH0g8+ESToUhLkEomlsAJX0sZYdUe6wksQBHhXf2jEE/1tj7kOGWw2z7L0V4xwutAyaFmrAcJ0PTyIKBySN8REcrCu/TZGzrlI0v/bszayZosQN9Safu1oA0p6dQOml9B13EpS2hjp0dKuUrqIZNC5rxItZwim0bdHCA6TnN71TV2l"}),s[85]||(s[85]=n("h3",{id:"thread-safety-and-synchronization",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thread-safety-and-synchronization"},[n("span",null,"Thread Safety and Synchronization")])],-1)),s[86]||(s[86]=n("p",null,[n("strong",null,"One approach to addressing shared mutable state is by using thread-safe data structures provided by the Kotlin standard library, such as Atomic types"),e(" .")],-1)),s[87]||(s[87]=n("h4",{id:"atomic-operations",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#atomic-operations"},[n("span",null,"Atomic Operations")])],-1)),t(a,{title:"Atomic%20Operations%20Example",key:"f37e63bc",settings:"%7B%7D",files:"eJxVT8FqwzAM/RUTdkh2MNl1sEMHWxnstuO8g+u5qVJHCopdCqX/Xjl1aPsOlm29J733W8EwEke1pxgAj9oRU4qAftLPBkuztwer5TdIG11i9hi1jTSA06u5fGH0nWeDBrcJ1WAB60a9KU74HsjtATt1MqgEBxuUoyQCFsKDvG6bK+fG7GkzCe0bpli/tG2zTMlYB9rY8ONo9DrYhG53381gP3o7Cx+VC4oPDejYD5Jqhf9rH+tiY8H59izXUq5n9qi3xB82O1AQdU9z/sIaGTAGrE31CXiXXvIl/6qeTouNLq8+m0rWi7T6uwD7iIJS"}),s[88]||(s[88]=n("h4",{id:"mutex",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mutex"},[n("span",null,"Mutex")])],-1)),t(a,{title:"Mutex%20Example",key:"518a985d",settings:"%7B%7D",files:"eJx1UMFOwzAM/RWr4tAyKSpXJC5IcBpfQDiEKGPeUrtKHRhC/DtOl4pNsHdI4veeo2c/NziMnAT2LBHpYDwnzoIUJnNt6bI4fZIvDkubTDA4pLaDO0iZ7iP7PdIbfFkCxbuLMGQJB5Wfyt12i5DAcyYJSaX+SP727Ph1Un6Nk7Q3fd8t/xVEl8lvT5mCFMbgZvO5e8GcwnygbNca8T9HQY20Wv2Vv8+pk7I+63U8ywBmw+nBlaiAYnY8r6m6xoQkkVrbPCLpwMsudPgcbuGq1rbRfWlL8/IDtVJ94A=="}),s[89]||(s[89]=i(`<h2 id="lesson-5-evolution-of-kotlin" tabindex="-1"><a class="header-anchor" href="#lesson-5-evolution-of-kotlin"><span>Lesson 5 : Evolution of Kotlin</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Kotlin playground not available for those new features</p></div><h3 id="explicit-backing-fields-issue-278" tabindex="-1"><a class="header-anchor" href="#explicit-backing-fields-issue-278"><span>Explicit Backing Fields (<a href="https://github.com/Kotlin/KEEP/issues/278" target="_blank" rel="noopener noreferrer">Issue 278</a>)</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Element</span><span class="token punctuation">(</span><span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> C <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> elementList<span class="token operator">:</span> List<span class="token operator">&lt;</span>Element<span class="token operator">&gt;</span></span>
<span class="line">        field <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">addElement</span><span class="token punctuation">(</span>element<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">(</span>field <span class="token keyword">as</span> MutableList<span class="token operator">&lt;</span>Element<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> c <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    c<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token function">Element</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;First&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    c<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token function">Element</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Second&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Elements: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">c<span class="token punctuation">.</span>elementList</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Size: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">c<span class="token punctuation">.</span>elementList<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// field is the backing field, elementList exposes it as List&lt;Element&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collection-literals-kt-43871" tabindex="-1"><a class="header-anchor" href="#collection-literals-kt-43871"><span>Collection Literals (<a href="https://youtrack.jetbrains.com/issue/KT-43871" target="_blank" rel="noopener noreferrer">KT-43871</a>)</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// Proposed collection literals syntax (not yet implemented)</span></span>
<span class="line"><span class="token keyword">val</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// List&lt;Int&gt;</span></span>
<span class="line"><span class="token keyword">val</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;one&quot;</span></span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;two&quot;</span></span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;three&quot;</span></span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// Map&lt;String, Int&gt;</span></span>
<span class="line"><span class="token keyword">val</span> <span class="token keyword">set</span><span class="token operator">:</span> Set<span class="token operator">&lt;</span>Int<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">val</span> map<span class="token operator">:</span> MutableMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Int<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;one&quot;</span></span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;two&quot;</span></span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;three&quot;</span></span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">val</span> array <span class="token operator">=</span> Array <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// Array&lt;Int&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">typealias</span> IntList <span class="token operator">=</span> List<span class="token operator">&lt;</span>Int<span class="token operator">&gt;</span></span>
<span class="line">IntList <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Set<span class="token operator">&lt;</span>Int<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Received set: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">a</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Using the proposed literals</span></span>
<span class="line">    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;List: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">list</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Map: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">map</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> </span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Set: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression"><span class="token keyword">set</span></span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Array: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">array<span class="token punctuation">.</span><span class="token function">contentToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">val</span> intList <span class="token operator">=</span> IntList <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;IntList: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">intList</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="name-based-destructuring-kotlin-2-4" tabindex="-1"><a class="header-anchor" href="#name-based-destructuring-kotlin-2-4"><span>Name based destructuring (<a href="https://kotlinlang.org/docs/destructuring-declarations.html" target="_blank" rel="noopener noreferrer">Kotlin 2.4</a>)</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Talk</span><span class="token punctuation">(</span><span class="token keyword">val</span> title<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> speakerName<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> talk <span class="token operator">=</span> <span class="token function">Talk</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Kotlin Coroutines&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;John Doe&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Name-based destructuring (proposed syntax)</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token keyword">val</span> speakerName<span class="token punctuation">,</span> <span class="token keyword">val</span> title<span class="token punctuation">)</span> <span class="token operator">=</span> talk</span>
<span class="line">    </span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Good!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Speaker: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">speakerName</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Title: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">title</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Benefits of name-based destructuring</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\\nBenefits:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;• Order doesn&#39;t matter&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;• Properties selected by name&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;• More readable than positional&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rich-errors-kt-68296" tabindex="-1"><a class="header-anchor" href="#rich-errors-kt-68296"><span>Rich Errors (<a href="https://youtrack.jetbrains.com/issue/KT-68296" target="_blank" rel="noopener noreferrer">KT-68296</a>)</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// Rich errors with union types (proposed syntax)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">TransactionId</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">FetchingError</span><span class="token punctuation">(</span><span class="token keyword">val</span> message<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">TransactionError</span><span class="token punctuation">(</span><span class="token keyword">val</span> errorMessage<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> User | FetchingError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">User</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Alice&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">FetchingError</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Network error&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> User<span class="token punctuation">.</span><span class="token function">charge</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> Double<span class="token punctuation">)</span><span class="token operator">:</span> TransactionId | TransactionError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>amount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> amount <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">TransactionId</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;txn_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">TransactionError</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Invalid amount: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">amount</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> user <span class="token operator">=</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> transaction <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">charge</span><span class="token punctuation">(</span>amount <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">when</span> <span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">is</span> TransactionId <span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Transaction succeeded&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">is</span> FetchingError <span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Fetching failed&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">is</span> TransactionError <span class="token operator">-&gt;</span> </span>
<span class="line">            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Transaction failed: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">transaction<span class="token punctuation">.</span>errorMessage</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Rich errors provide type-safe error handling&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="must-return-values" tabindex="-1"><a class="header-anchor" href="#must-return-values"><span>Must return values</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token comment">// Must-use return values (proposed syntax)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">TransactionId</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">FetchingError</span><span class="token punctuation">(</span><span class="token keyword">val</span> message<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">TransactionError</span><span class="token punctuation">(</span><span class="token keyword">val</span> errorMessage<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> User | FetchingError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">User</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Alice&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">FetchingError</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Network error&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> User<span class="token punctuation">.</span><span class="token function">charge</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> Double<span class="token punctuation">)</span><span class="token operator">:</span> TransactionId | TransactionError <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>amount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> amount <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">TransactionId</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;txn_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">TransactionError</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Invalid amount: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">amount</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> user <span class="token operator">=</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">when</span> <span class="token punctuation">(</span><span class="token keyword">val</span> transaction <span class="token operator">=</span> user<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">charge</span><span class="token punctuation">(</span>amount <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">is</span> TransactionId <span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Transaction completed! Thanks!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">is</span> TransactionError <span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">transaction<span class="token punctuation">.</span>errorMessage</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;User fetch failed&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// Must-use prevents ignoring critical return values</span></span>
<span class="line">    <span class="token comment">// fetchUser() // Would cause compiler error - return value must be used</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="additional-kotlin-language-features" tabindex="-1"><a class="header-anchor" href="#additional-kotlin-language-features"><span>Additional Kotlin Language Features</span></a></h3><table><thead><tr><th>Feature</th><th>Description</th><th>Status</th><th>Example Use Case</th></tr></thead><tbody><tr><td><strong>Multi-field value classes</strong></td><td>Extension of value classes to support multiple fields while maintaining performance benefits</td><td>Proposed</td><td><code>value class Coordinates(val x: Double, val y: Double)</code> - Efficient data containers with multiple properties</td></tr><tr><td><strong>Context parameters</strong></td><td>Implicit parameter passing mechanism, similar to Scala&#39;s implicit parameters</td><td>Experimental</td><td>Dependency injection, configuration passing without explicit parameter threading</td></tr><tr><td><strong>Infinite loop guards</strong></td><td>Compiler protection against accidental infinite loops in certain contexts</td><td>Proposed</td><td>Prevent <code>while(true)</code> without break conditions, timeout mechanisms for long-running operations</td></tr><tr><td><strong>HexFormat</strong></td><td>Built-in hexadecimal formatting and parsing utilities</td><td>Available in Kotlin 1.9+</td><td><code>HexFormat.of().formatHex(byteArray)</code> - Easy hex string conversion for cryptography, debugging</td></tr><tr><td><strong>Kotlin statics and static extensions</strong></td><td>Enhanced static member support and extension functions on companion objects</td><td>Proposed</td><td>Better Java interop, cleaner static utility functions, enhanced companion object capabilities</td></tr></tbody></table><h3 id="resources-for-latest-updates" tabindex="-1"><a class="header-anchor" href="#resources-for-latest-updates"><span>Resources for Latest Updates</span></a></h3><table><thead><tr><th>Resource</th><th>Purpose</th></tr></thead><tbody><tr><td><a href="https://github.com/Kotlin/KEEP" target="_blank" rel="noopener noreferrer">github.com/Kotlin/KEEP</a></td><td>Official Kotlin Enhancement Proposals - track feature development and proposals</td></tr><tr><td><a href="https://x.com/kotlin" target="_blank" rel="noopener noreferrer">x.com/kotlin</a></td><td>Official Kotlin Twitter/X account - announcements, updates, and community news</td></tr></tbody></table>`,16))])}const h=o(c,[["render",u]]),g=JSON.parse('{"path":"/0.language/","title":"About Kotlin","lang":"en-US","frontmatter":{"description":"About Kotlin Lesson 1: Kotlin Basics Lesson 2: Functions Lesson 3: Classes and Objects Lesson 4: Concurrent Programming Lesson 5: Evolution of Kotlin Lesson 1: Kotlin Basics Ove...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"About Kotlin\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T13:37:20.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/0.language/"}],["meta",{"property":"og:title","content":"About Kotlin"}],["meta",{"property":"og:description","content":"About Kotlin Lesson 1: Kotlin Basics Lesson 2: Functions Lesson 3: Classes and Objects Lesson 4: Concurrent Programming Lesson 5: Evolution of Kotlin Lesson 1: Kotlin Basics Ove..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T13:37:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T13:37:20.000Z"}]]},"git":{"updatedTime":1753882640000,"contributors":[{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":11,"url":"https://github.com/Brah"}],"changelog":[{"hash":"c669f3fa4d6bb3891bb215a621239c0f8ed11a37","time":1753882640000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"updated kstore + begening of SQLDelight update"},{"hash":"585f8061a9c3e7de5dcb97f9b127f1431049e6b9","time":1753881243000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"be5b1335c6ed37eeba718f8f8d8c78c4a661dc58","time":1753880775000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"6b54f235746edc2c67628ec91d9f4f3bdfbf9eba","time":1753880382000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"7d2b5ca56d4b1bea8fda909adc5f41539d93380b","time":1753880275000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"522b9741d2e20b85ef2d7fb5cc5b10637337474f","time":1753880096000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"d10556defc08cf7d6d5b211b9112ecb85a89bdf4","time":1753866296000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"1fb2c13ffb35311bac91bb6aacae657a3085faf8","time":1753866156000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"4e9c5345647fe5e31b0a798c4861e4cda1850e60","time":1753865700000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"}]},"filePathRelative":"0.language/README.md","autoDesc":true}');export{h as comp,g as data};
