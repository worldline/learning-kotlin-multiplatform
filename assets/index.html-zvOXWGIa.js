import{_ as n,c as a,a as e,d as t,o as i}from"./app-CarcV5a4.js";const p={};function l(o,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="preferences" tabindex="-1"><a class="header-anchor" href="#preferences"><span>Preferences</span></a></h1><p>Let&#39;s use preferences to store the last time the quiz was updated. We will use a multiplatform library called Kstore</p><p><a href="https://github.com/xxfast/KStore" target="_blank" rel="noopener noreferrer">Kstore</a> is a tiny Kotlin multiplatform library that assists in saving and restoring objects to and from disk using kotlinx.coroutines, kotlinx.serialization and kotlinx.io. Inspired by RxStore</p><div class="hint-container tip"><p class="hint-container-title">More settings options</p><p>if you want alternate library to store simple key-value data, you can use <a href="https://github.com/russhwolf/multiplatform-settings" target="_blank" rel="noopener noreferrer"><code>Multiplatform-Settings</code></a> or <a href="&#39;https://developer.android.com/reference/kotlin/androidx/datastore/package-summary.html&#39;"><code>DataStore multiplatform</code></a>. Be carefull, not all target web platform</p></div><p>Add kstore dependency to your project for each target platform</p><details class="hint-container details"><summary>build.gradle.kts (composeMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">  commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kstore<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        androidMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kstore<span class="token punctuation">.</span>file<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        desktopMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kstore<span class="token punctuation">.</span>file<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        iosMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kstore<span class="token punctuation">.</span>file<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        wasmJsMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kstore<span class="token punctuation">.</span>storage<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>Define the native call to get the kstore instance</p><details class="hint-container details"><summary>platform.kt (commonMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token keyword">expect</span> <span class="token keyword">fun</span> <span class="token function">getKStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KStore<span class="token operator">&lt;</span>Quiz<span class="token operator">&gt;</span><span class="token operator">?</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>:::</p><p>Define each platform call to get the kstore instance for Android, iOS, Web, Desktop</p><details class="hint-container details"><summary>platform.kt (androidMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">getKStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KStore<span class="token operator">&lt;</span>RequestTime<span class="token operator">&gt;</span><span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">storeOf</span><span class="token punctuation">(</span>QuizApp<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dataDir<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/quiz.json&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>Also Android needs context to instanciate the kstore. Without injection library, you can use an App context singleton.</p><details class="hint-container details"><summary>QuizApp.kt (androidMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> QuizApp <span class="token operator">:</span> <span class="token function">Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        app <span class="token operator">=</span> <span class="token keyword">this</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> app<span class="token operator">:</span> QuizApp</span>
<span class="line">        <span class="token keyword">fun</span> <span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Context <span class="token operator">=</span> app<span class="token punctuation">.</span>applicationContext</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>Add the QuizApp to the AndroidManifest.xml</p><details class="hint-container details"><summary>AndroidManifest.xml (androidMain)</summary><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line">...</span>
<span class="line">    &lt;application</span>
<span class="line">        android:name=&quot;.QuizApp&quot;</span>
<span class="line">...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>platform.kt (iosMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@OptIn</span><span class="token punctuation">(</span>ExperimentalKStoreApi<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> ExperimentalForeignApi<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">getKStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KStore<span class="token operator">&lt;</span>RequestTime<span class="token operator">&gt;</span><span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> NSFileManager<span class="token punctuation">.</span>defaultManager<span class="token punctuation">.</span><span class="token function">URLForDirectory</span><span class="token punctuation">(</span></span>
<span class="line">        directory <span class="token operator">=</span> NSDocumentDirectory<span class="token punctuation">,</span></span>
<span class="line">        appropriateForURL <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">        create <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">        inDomain <span class="token operator">=</span> NSUserDomainMask<span class="token punctuation">,</span></span>
<span class="line">        error <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token operator">!!</span><span class="token punctuation">.</span>path<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">storeOf</span><span class="token punctuation">(</span></span>
<span class="line">        file<span class="token operator">=</span> <span class="token function">Path</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><details class="hint-container details"><summary>platform.kt (wasmJsMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">getKStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KStore<span class="token operator">&lt;</span>RequestTime<span class="token operator">&gt;</span><span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">storeOf</span><span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;kstore_quiz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><details class="hint-container details"><summary>platform.kt (desktopMain)</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">actual</span> <span class="token keyword">fun</span> <span class="token function">getKStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> KStore<span class="token operator">&lt;</span>RequestTime<span class="token operator">&gt;</span><span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">storeOf</span><span class="token punctuation">(</span><span class="token function">Path</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;quiz.json&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>Add a RequestTime object with an updatable timestamp</p><details class="hint-container details"><summary>Quiz.kt (commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Serializable</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">RequestTime</span><span class="token punctuation">(</span><span class="token keyword">val</span> updateTime<span class="token operator">:</span> Long <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Create a KStoreDataSource class to store the kstore data</p><details class="hint-container details"><summary>KStoreDataSource.kts (commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div></details><p>class KStoreDataSource() {</p><pre><code>private val kStoreQuiz: KStore&lt;RequestTime&gt;? = getKStore()

suspend fun getUpdateTimeStamp(): Long {
    return kStoreQuiz?.get()?.updateTime ?: kStoreQuiz?.set(RequestTime(0L)).let {
        0L
    }
}

suspend fun setUpdateTimeStamp(timeStamp: Long) {
    kStoreQuiz?.update { requestTime: RequestTime? -&gt;
        requestTime?.copy(updateTime = timeStamp)
    }
}
</code></pre><p>}</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">:::</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">Update the QuizRepository class to use the kstore</span>
<span class="line"></span>
<span class="line">::: details QuizRepository.kts (commonMain) </span>
<span class="line"></span>
<span class="line">\`\`\` kotlin</span>
<span class="line">class QuizRepository {</span>
<span class="line">   private val mockDataSource = MockDataSource()</span>
<span class="line">   private val quizApiDatasource = QuizApiDatasource()</span>
<span class="line">   private var quizKStoreDataSource = KStoreDataSource()</span>
<span class="line"></span>
<span class="line">   private suspend fun fetchQuiz(): List&lt;Question&gt; = quizApiDatasource.getAllQuestions().questions</span>
<span class="line"></span>
<span class="line">   private suspend fun fetchAndStoreQuiz(): List&lt;Question&gt; {</span>
<span class="line">       val questions = fetchQuiz()</span>
<span class="line">       //Later on we will store the question in a database SQLite</span>
<span class="line">       return questions</span>
<span class="line">   }</span>
<span class="line"></span>
<span class="line">   @OptIn(ExperimentalTime::class)</span>
<span class="line">   suspend fun updateQuiz(): List&lt;Question&gt; {</span>
<span class="line">       try {</span>
<span class="line">           val lastRequest = quizKStoreDataSource.getUpdateTimeStamp()</span>
<span class="line">           return if (lastRequest == 0L || lastRequest - Clock.System.now().epochSeconds &gt; 300000) {</span>
<span class="line">               fetchAndStoreQuiz()</span>
<span class="line">           } else {</span>
<span class="line">               fetchQuiz() //later on we will fetch from the database</span>
<span class="line">           }</span>
<span class="line">       } catch (e: NullPointerException) {</span>
<span class="line">           return fetchAndStoreQuiz()</span>
<span class="line">       } catch (e: Exception) {</span>
<span class="line">           e.printStackTrace()</span>
<span class="line">           return mockDataSource.generateDummyQuestionsList()</span>
<span class="line">       }</span>
<span class="line">   }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full sources can be retrieved <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/6.preferences.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><h2 id="🎬-summary-video-of-the-course" tabindex="-1"><a class="header-anchor" href="#🎬-summary-video-of-the-course"><span>🎬 Summary video of the course</span></a></h2>`,42),t("iframe",{width:"560",height:"315",src:"https://youtube.com/embed/r-wUqYZgbOo",title:"KMP Quiz App overview",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1)]))}const r=n(p,[["render",l]]),u=JSON.parse(`{"path":"/8.preferences/","title":"Preferences","lang":"en-US","frontmatter":{"description":"Preferences Let's use preferences to store the last time the quiz was updated. We will use a multiplatform library called Kstore Kstore is a tiny Kotlin multiplatform library th...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Preferences\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T13:37:20.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/8.preferences/"}],["meta",{"property":"og:title","content":"Preferences"}],["meta",{"property":"og:description","content":"Preferences Let's use preferences to store the last time the quiz was updated. We will use a multiplatform library called Kstore Kstore is a tiny Kotlin multiplatform library th..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T13:37:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T13:37:20.000Z"}]]},"git":{"updatedTime":1753882640000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":15},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":3,"url":"https://github.com/Brah"}],"changelog":[{"hash":"c669f3fa4d6bb3891bb215a621239c0f8ed11a37","time":1753882640000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"updated kstore + begening of SQLDelight update"},{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"f95aa2dd0f8bf2d6ca0f0d3b856229dca2ac1802","time":1728076821000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update markdown"},{"hash":"f1c714ecd97c57f82cfb419ebab137629270aa78","time":1728076534000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update link"},{"hash":"7c5b1dd56f4c51ef5e68eeff46e7a2f0c1d4a9e3","time":1728076510000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update links"},{"hash":"0a22d46ac2c635e7918855ed1f60053cbc036140","time":1728076360000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update links"},{"hash":"951ffcfb6198878149c5b83b2fbcc4eefb32046e","time":1728057490000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update link"},{"hash":"f53488d1070c6b67e00bf086f3861fa135b1d496","time":1728056950000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update with sources"},{"hash":"3e6f97277d79c11a1da48f76d738b1e4032bdef5","time":1728055902000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update manifest infos"},{"hash":"66fdf3439b6ae2fa7e7f95209c59b3e9989f8b80","time":1728055293000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update with kstore datasource"},{"hash":"09410832c3ea95319d7e8137c7d7ca05b6798468","time":1728054004000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update with Kstore intro"},{"hash":"9266e689095b74593c20616bd7d243c309eaf167","time":1728053834000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"remove under construction"},{"hash":"ff612f1ded3c795ec4d5602bf18ab205e5e29650","time":1728053792000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update section issue"},{"hash":"418fc28d19b101feb421d4428823e194078431f1","time":1728053674000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update instructions"},{"hash":"a6860f8e9f316ac633231020266d37909cfe54ab","time":1728053482000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update preferences section"},{"hash":"c252fec057b591f2f4d996848ceedf55268ebb46","time":1728049777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update with viewmodel"},{"hash":"712f63c398d18d0cf72ffe9ce36e3528ee0da8a8","time":1725280399000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update User interface section , refactor sections by adding preferences"}]},"filePathRelative":"8.preferences/README.md","autoDesc":true}`);export{r as comp,u as data};
