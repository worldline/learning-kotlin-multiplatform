import{_ as a,c as e,d as n,a as t,o as p}from"./app-CarcV5a4.js";const i="/learning-kotlin-multiplatform/assets/data_layer-i0YTWCrI.png",o={};function l(c,s){return p(),e("div",null,s[0]||(s[0]=[n("h1",{id:"architecture",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#architecture"},[n("span",null,"Architecture")])],-1),n("p",null,"Let's Architecture our Quiz app with the MVVM pattern.",-1),n("h2",{id:"overview",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#overview"},[n("span",null,"Overview")])],-1),n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Architecture basics"),n("p",null,[n("strong",null,"Everything You NEED to Know About MVVM Architecture Patterns")]),n("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/I5c7fBgvkNY",title:"Everything You NEED to Know About Client Architecture Patterns",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),t('<h3 id="data-layer-for-kmp" tabindex="-1"><a class="header-anchor" href="#data-layer-for-kmp"><span>Data layer for KMP</span></a></h3><p>Data layer in KMP is under building but largly inspired by <a href="https://developer.android.com/topic/architecture/data-layer" target="_blank" rel="noopener noreferrer">Android Architecture pattern</a></p><p><img src="'+i+`" alt="data layer overview"></p><p>Repository classes are responsible for the following tasks:</p><ul><li>Exposing data to the rest of the app.</li><li>Centralizing changes to the data.</li><li>Resolving conflicts between multiple data sources.</li><li>Abstracting sources of data from the rest of the app.</li><li>Containing business logic.</li></ul><h3 id="kotlin-flow" tabindex="-1"><a class="header-anchor" href="#kotlin-flow"><span><a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/" target="_blank" rel="noopener noreferrer">Kotlin flow</a></span></a></h3><p>&quot;A flow is an asynchronous data stream that sequentially emits values and completes normally or with an exception.&quot;</p><p>There are multiple types of flow, for the Hands-on Lab, we will focus on <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-state-flow/" target="_blank" rel="noopener noreferrer"><code>StateFlow</code></a></p><p>A state flow is a hot flow because its active instance exists independently of the presence of collectors (our composables that consume the data)</p><h3 id="coroutine" tabindex="-1"><a class="header-anchor" href="#coroutine"><span><a href="https://kotlinlang.org/docs/coroutines-basics.html#your-first-coroutine" target="_blank" rel="noopener noreferrer">Coroutine</a></span></a></h3><p>&quot;A coroutine is an instance of suspendable computation. It is conceptually similar to a thread, in the sense that it takes a block of code to run that works concurrently with the rest of the code. However, a coroutine is not bound to any particular thread. It may suspend its execution in one thread and resume in another one.&quot;</p><h2 id="ðŸ§ª-datasource-and-repository" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-datasource-and-repository"><span>ðŸ§ª DataSource and Repository</span></a></h2><ul><li>Create a mock datasource, that generate a list of question</li><li>Use it with a repository</li><li>Use the repository on the root of your application ( navHost in App.kt)</li></ul><h3 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>MockDataSource.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>worldline<span class="token punctuation">.</span>quiz<span class="token punctuation">.</span>data<span class="token punctuation">.</span>datasources</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MockDataSource <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">fun</span> <span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a great platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a bad platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>QuizRepository.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>worldline<span class="token punctuation">.</span>quiz<span class="token punctuation">.</span>data</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> mockDataSource <span class="token operator">=</span> <span class="token function">MockDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> coroutineScope <span class="token operator">=</span> <span class="token function">CoroutineScope</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>Main<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> _questionState<span class="token operator">=</span>  <span class="token function">MutableStateFlow</span><span class="token punctuation">(</span>listOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> questionState <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> _questionState</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        coroutineScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            _questionState<span class="token punctuation">.</span><span class="token function">update</span> <span class="token punctuation">{</span></span>
<span class="line">                    mockDataSource<span class="token punctuation">.</span><span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>App.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span></span>
<span class="line">    navController<span class="token operator">:</span> NavHostController <span class="token operator">=</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    quizRepository<span class="token operator">:</span> QuizRepository <span class="token operator">=</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">NavHost</span><span class="token punctuation">(</span></span>
<span class="line">            navController <span class="token operator">=</span> navController<span class="token punctuation">,</span></span>
<span class="line">            startDestination <span class="token operator">=</span> WelcomeRoute<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">            composable<span class="token operator">&lt;</span>WelcomeRoute<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span></span>
<span class="line">                    onStartButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                        navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> QuizRoute<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            composable<span class="token operator">&lt;</span>QuizRoute<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> questions <span class="token keyword">by</span> quizRepository<span class="token punctuation">.</span>questionState<span class="token punctuation">.</span><span class="token function">collectAsState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">QuestionScreen</span><span class="token punctuation">(</span></span>
<span class="line">                        questions <span class="token operator">=</span> questions<span class="token punctuation">,</span></span>
<span class="line">        </span>
<span class="line">                        onFinishButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                            score<span class="token operator">:</span> Int<span class="token punctuation">,</span> questionSize<span class="token operator">:</span> Int <span class="token operator">-&gt;</span> navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> <span class="token function">ScoreRoute</span><span class="token punctuation">(</span>score<span class="token punctuation">,</span> questionSize<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            composable<span class="token operator">&lt;</span>ScoreRoute<span class="token operator">&gt;</span> <span class="token punctuation">{</span> backStackEntry <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token keyword">val</span> scoreRoute<span class="token operator">:</span> ScoreRoute <span class="token operator">=</span> backStackEntry<span class="token punctuation">.</span>toRoute<span class="token operator">&lt;</span>ScoreRoute<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">ScoreScreen</span><span class="token punctuation">(</span></span>
<span class="line">                    score <span class="token operator">=</span> scoreRoute<span class="token punctuation">.</span>score<span class="token punctuation">,</span></span>
<span class="line">                    total <span class="token operator">=</span> scoreRoute<span class="token punctuation">.</span>questionSize<span class="token punctuation">,</span></span>
<span class="line">                    onResetButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                        navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> QuizRoute<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full solution for this section is availabe <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/3.repository.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><h2 id="ðŸ§ª-viewmodel" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-viewmodel"><span>ðŸ§ª ViewModel</span></a></h2><ul><li>Create a ViewModel class</li><li>Upgrade the repository that is no more storing the flow and move it to the ViewModel</li><li>Upgrade the App to use the ViewModel instead of the Repository</li></ul><div class="hint-container tip"><p class="hint-container-title">Third party Architecture libraries</p><p>Domain layer framework such as <a href="https://developer.android.com/topic/libraries/architecture/viewmodel" target="_blank" rel="noopener noreferrer"><code>ViewModels</code></a> are just available on KMP. But you can also use a third party library such as <a href="https://github.com/icerockdev/moko-mvvm" target="_blank" rel="noopener noreferrer"><code>Moko-MVVM</code></a> or <a href="https://github.com/rickclephas/KMM-ViewModel" target="_blank" rel="noopener noreferrer"><code>KMM-ViewModel</code></a> or <a href="&#39;https://tlaster.github.io/PreCompose/&#39;"><code>precompose</code></a></p></div><details class="hint-container details"><summary>gradle.build.kts (module : composeApp)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"> commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>androidx<span class="token punctuation">.</span>lifecycle<span class="token punctuation">.</span>viewmodel<span class="token punctuation">.</span>compose<span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>QuizViewModel.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>worldline<span class="token punctuation">.</span>quiz</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> QuizViewModel <span class="token operator">:</span> <span class="token function">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> quizRepository<span class="token operator">:</span> QuizRepository <span class="token operator">=</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> _questionState<span class="token operator">=</span>  <span class="token function">MutableStateFlow</span><span class="token punctuation">(</span>listOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> questionState <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> _questionState</span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* Can be replaced with explicit backing fields</span>
<span class="line">    val questionState : StateFlow&lt;List&lt;Question&gt;&gt;</span>
<span class="line">       field =  MutableStateFlow(listOf&lt;Question&gt;())</span>
<span class="line">    -&gt; in build.gradle.kts : sourceSets.all { languageSettings.enableLanguageFeature(&quot;ExplicitBackingFields&quot;) }</span>
<span class="line">    */</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">getQuestionQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">getQuestionQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        viewModelScope<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>Default<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            _questionState<span class="token punctuation">.</span><span class="token function">update</span> <span class="token punctuation">{</span></span>
<span class="line">                quizRepository<span class="token punctuation">.</span><span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>QuizRepository.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> QuizRepository  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> mockDataSource <span class="token operator">=</span> <span class="token function">MockDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> mockDataSource<span class="token punctuation">.</span><span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>App.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span></span>
<span class="line">    navController<span class="token operator">:</span> NavHostController <span class="token operator">=</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    quizViewModel<span class="token operator">:</span> QuizViewModel <span class="token operator">=</span> <span class="token function">QuizViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">composable<span class="token operator">&lt;</span>QuizRoute<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> questions <span class="token keyword">by</span> quizViewModel<span class="token punctuation">.</span>questionState<span class="token punctuation">.</span><span class="token function">collectAsState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full solution for this section is availabe <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/4.viewmodel.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2>`,28)]))}const u=a(o,[["render",l]]),d=JSON.parse(`{"path":"/6.arch/","title":"Architecture","lang":"en-US","frontmatter":{"description":"Architecture Let's Architecture our Quiz app with the MVVM pattern. Overview Architecture basics Everything You NEED to Know About MVVM Architecture Patterns Data layer for KMP ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Architecture\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T08:35:21.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/6.arch/"}],["meta",{"property":"og:title","content":"Architecture"}],["meta",{"property":"og:description","content":"Architecture Let's Architecture our Quiz app with the MVVM pattern. Overview Architecture basics Everything You NEED to Know About MVVM Architecture Patterns Data layer for KMP ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T08:35:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T08:35:21.000Z"}]]},"git":{"updatedTime":1753864521000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":5},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":5,"url":"https://github.com/Brah"}],"changelog":[{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"bb46b9e8a6e31076026bccd606ff08a2eb6280c7","time":1740044189000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"minor fixes"},{"hash":"14a77bb70ded7a054b522f40540e3cf14a2c4132","time":1739793149000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"416d7282a000dc0b265b70efc102de8b0c9f19ce","time":1739789705000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"259f27e535fdeb5b046698bca0804a4058ef61a3","time":1728293377000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Architecture section with typed navigation"},{"hash":"ba528bd44bc99669b3051ff38f88b3d1c2a864c2","time":1728052184000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update"},{"hash":"6834380f1185ae308d1be1f16ba3000a6de66390","time":1728052125000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added sources until preferences"},{"hash":"c252fec057b591f2f4d996848ceedf55268ebb46","time":1728049777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update with viewmodel"},{"hash":"6c804d04d7a616a0e7d1f88f35d79b5934fb012e","time":1728037035000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update all sections with latest template and versions"}]},"filePathRelative":"6.arch/README.md","autoDesc":true}`);export{u as comp,d as data};
