import{_ as s,c as a,a as e,o as t}from"./app-CarcV5a4.js";const p="/learning-kotlin-multiplatform/assets/welcomescreen-fw1_MuGU.png",o="/learning-kotlin-multiplatform/assets/scorescreen-CgD5TFZC.png",i="/learning-kotlin-multiplatform/assets/uml-CgIVGHo2.png",l="/learning-kotlin-multiplatform/assets/quizscreen-BAbAaB3e.png",c={};function u(r,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="user-interface" tabindex="-1"><a class="header-anchor" href="#user-interface"><span>User interface</span></a></h1><h2 id="ðŸ“š-reminder" tabindex="-1"><a class="header-anchor" href="#ðŸ“š-reminder"><span>ðŸ“š Reminder</span></a></h2><h3 id="compose-multiplatform" tabindex="-1"><a class="header-anchor" href="#compose-multiplatform"><span><a href="https://www.jetbrains.com/lp/compose-mpp/" target="_blank" rel="noopener noreferrer">Compose Multiplatform</a></span></a></h3><p>Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code sharing between Android, iOS, Desktop and Web. It&#39;s a modern toolkit for building native UI. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs. It is based on <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noopener noreferrer">Android Jetpack Compose</a> declarative UI approach ( which is similar also to <a href="https://developer.apple.com/xcode/swiftui/" target="_blank" rel="noopener noreferrer">SwiftUI</a> for iOS )</p><h3 id="how-to-create-composables" tabindex="-1"><a class="header-anchor" href="#how-to-create-composables"><span>How to create composables ?</span></a></h3><p>Composables are UI components that can be simply declared with code as functions, properties (such as text color, fonts...) as function parameters and subviews are declared on function declaration.</p><ul><li>An <code>@Composable</code> annotation come always before the composable function.</li><li>Properties of size, behaviors of components can be set thanks to <code>Modifiers</code>. It permit to decorate and augent composables</li><li>You can align components with containers composables such as <code>Column</code> (Vertically), <code>Box</code>, <code>Row</code> (Horizontally)</li><li>Also you can preview composables with the annotation <code>@Preview</code> before the composable annotation.</li></ul><p>Example: 2 texts vertically aligned that fit all the width of the screen.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span> <span class="token string-literal singleline"><span class="token string">&quot;My Text1&quot;</span></span><span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;My Text2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Find composables available</p><p>For more information, you can have a look to <a href="https://developer.android.com/jetpack/compose/layouts/material" target="_blank" rel="noopener noreferrer">Android Jetpack Compose documentation</a></p></div><h2 id="create-composable-for-the-quiz" tabindex="-1"><a class="header-anchor" href="#create-composable-for-the-quiz"><span>Create composable for the Quiz</span></a></h2><h3 id="ðŸ§ª-welcomescreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-welcomescreen"><span>ðŸ§ª WelcomeScreen</span></a></h3><p><img src="`+p+`" alt="Welcome Screen preview"></p><p>You can now create your first view. For the Quiz we need a welcome screen displaying a Card centered with a button inside to start the quiz It is simply compose of the following composables :</p><ul><li><p>a Card rounded shape container</p></li><li><p>a Text</p></li><li><p>a Button</p></li><li><p>Create a new composable <code>WelcomeScreen.kt</code> on commonMain module</p></li><li><p>Make sure that the App() composable is using it has below</p></li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">welcomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Run you first view on all platforms , it should work.</li></ul><h3 id="ðŸ§ª-scorescreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-scorescreen"><span>ðŸ§ª ScoreScreen</span></a></h3><p><img src="`+o+`" alt="Score Screen preview"></p><p>The second view will be quite similar but able de show final scores</p><ul><li>Create a new composable <code>ScoreScreen.kt</code> on commonMain module</li><li>Make sure that the App() composable is using it has below</li><li>The composable will have a <code>String</code> value as parameter</li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">scoreScreen</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;10/20&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Run you first view on all platforms , it should work.</li></ul><h3 id="ðŸ§ª-questionscreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-questionscreen"><span>ðŸ§ª QuestionScreen</span></a></h3><h4 id="data-classes-for-quiz-modeling" tabindex="-1"><a class="header-anchor" href="#data-classes-for-quiz-modeling"><span>Data classes for Quiz modeling</span></a></h4><p><img src="`+i+`" alt="class_diagram"></p><p>We can create classes on the package <code>data.dataclasses</code></p><details class="hint-container details"><summary>Answer.kt (commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span> String <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Question.kt (commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Question</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token keyword">val</span> correctAnswerId<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> answers<span class="token operator">:</span>List<span class="token operator">&lt;</span>Answer<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Quiz.kt (commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Quiz</span><span class="token punctuation">(</span><span class="token keyword">var</span> questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h4 id="make-the-composable" tabindex="-1"><a class="header-anchor" href="#make-the-composable"><span>Make the composable</span></a></h4><p>Now we can make a composable with interactions.</p><p><img src="`+l+`" alt="class_diagram"></p><p>The screen is composed of :</p><ul><li>The question label in a <code>Card</code></li><li>Single choice answer component with <code>RadioButton</code></li><li>A <code>Button</code> to submit the answer</li><li>A <code>LinearProgressIndicator</code> indicating the quiz progress</li></ul><p>After creating the UI view, we can pass to this composable the list of questions. When the <code>App</code>composable will create <code>questionScreen()</code> composable we will generate mock questions data for now to generate the list of questions.</p><h5 id="state-management" tabindex="-1"><a class="header-anchor" href="#state-management"><span>State management</span></a></h5><p>All views of question will be one unique composable that updates with the correct question/answers data each time we are clicking on the <code>next</code> button.</p><p>We use <code>MutableState</code> value for that. It permit to keep data value and recompose the view when the data is changed. It&#39;s exactly what we need for our quiz page :</p><ul><li>Keep the value of the question position on the list</li><li>Keep the value of the answer selected by the user each time he switch between RadioButtons</li><li>Keep the score to get the final one at the end of the list.</li></ul><p>Here is an example of <code>MutableState</code> value declaration</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">    <span class="token keyword">var</span> questionProgress <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>You can declare the 2 other MutableState values and after use it on your composable ensuring that on the button click <code>questionProgress</code>is incrementing so the question and his answers can change on the view.</p><h2 id="ðŸ§ª-exercise" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-exercise"><span>ðŸ§ª Exercise</span></a></h2><p>Create the composable screens WelcomeScreen.kt and ScoreScreen.kt and then the QuestionScreen.kt. Try to be accurate regarding the screenshots and the described features. provided.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>For now, no navigation is implemented, so you can only display the screens one after another by changing the <code>App()</code> composable content.</p></div><h3 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>WelcomeScreen.kt (SourseSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">                <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Quiz&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        fontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;A simple Quiz to discovers KMP and compose.&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        onClick <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Start the Quiz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>ScoreScreen.kt (SourseSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ScoreScreen</span><span class="token punctuation">(</span>score<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            colors <span class="token operator">=</span> androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>material3<span class="token punctuation">.</span>CardDefaults<span class="token punctuation">.</span><span class="token function">cardColors</span><span class="token punctuation">(</span></span>
<span class="line">                containerColor <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        fontSize <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;score&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        fontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                        text <span class="token operator">=</span> score<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Retake the great Quiz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Preview</span></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ScoreScreenAndroidPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">ScoreScreen</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;10/10&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>To use default icons please add the following dependency to your <code>build.gradle.kts</code> commonMain sourceSet</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">implementation</span><span class="token punctuation">(</span>compose<span class="token punctuation">.</span>materialIconsExtended<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>package <code>screens</code> contains all the composables for the Quiz app.</p><details class="hint-container details"><summary>QuestionScreen.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> questionProgress <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">var</span> selectedAnswer <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">var</span> score <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">                horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">,</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    text <span class="token operator">=</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span></span>
<span class="line">                    fontSize <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                    textAlign <span class="token operator">=</span> TextAlign<span class="token punctuation">.</span>Center</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">selectableGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>answers<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> answer <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">RadioButton</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        selected <span class="token operator">=</span> <span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> answer<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        onClick <span class="token operator">=</span> <span class="token punctuation">{</span> selectedAnswer <span class="token operator">=</span> answer<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> answer<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">,</span> verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>bottom <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">if</span><span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        score<span class="token operator">++</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        questionProgress<span class="token operator">++</span></span>
<span class="line">                        selectedAnswer <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">                        <span class="token comment">// Go to the score section</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">NextOrDoneButton</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>AutoMirrored<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>ArrowForward<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;Next&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">else</span> <span class="token function">NextOrDoneButton</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>Done<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;Done&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">           <span class="token function">LinearProgressIndicator</span><span class="token punctuation">(</span></span>
<span class="line">            progress <span class="token operator">=</span> <span class="token punctuation">{</span> questionProgress<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>size<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>size<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            color <span class="token operator">=</span> ProgressIndicatorDefaults<span class="token punctuation">.</span>linearColor<span class="token punctuation">,</span></span>
<span class="line">            trackColor <span class="token operator">=</span> ProgressIndicatorDefaults<span class="token punctuation">.</span>linearTrackColor<span class="token punctuation">,</span></span>
<span class="line">            strokeCap <span class="token operator">=</span> ProgressIndicatorDefaults<span class="token punctuation">.</span>LinearStrokeCap<span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">NextOrDoneButton</span><span class="token punctuation">(</span>iv<span class="token operator">:</span> ImageVector<span class="token punctuation">,</span> label<span class="token operator">:</span>String<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">        iv<span class="token punctuation">,</span></span>
<span class="line">        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Localized description&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>App.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> questions <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a great platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a bad platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Your Quiz have now all his composable screens made. Let&#39;s connect it to the Internet</p><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full solution for this section is availabe <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/1.ui.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://betterprogramming.pub/jetpack-compose-for-ios-getting-started-step-by-step-e7be6f52edd4" target="_blank" rel="noopener noreferrer">Jetpack Compose for iOS</a></li><li><a href="https://developer.android.com/jetpack/compose/layouts/material" target="_blank" rel="noopener noreferrer">Android Jetpack Compose component list</a></li><li><a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noopener noreferrer">Android Jetpack Compose</a></li><li><a href="https://www.jetbrains.com/lp/compose-mpp/" target="_blank" rel="noopener noreferrer">Kotlin Compose Multiplatform</a></li><li><a href="https://developer.apple.com/xcode/swiftui/" target="_blank" rel="noopener noreferrer">SwiftUI</a></li><li><a href="https://www.jetpackcompose.app/snippets" target="_blank" rel="noopener noreferrer">Composables snippets</a></li><li><a href="https://www.composables.com/" target="_blank" rel="noopener noreferrer">Composables widget database</a></li><li><a href="https://www.jetpackcompose.app/compare-declarative-frameworks/JetpackCompose-vs-SwiftUI-vs-Flutter" target="_blank" rel="noopener noreferrer">Compare declarative UI</a></li><li><a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-samples.html" target="_blank" rel="noopener noreferrer">KMP samples list</a></li><li><a href="https://developer.android.com/jetpack/compose/components" target="_blank" rel="noopener noreferrer">Jetpack compose composables</a></li></ul>`,59)]))}const k=s(c,[["render",u]]),m=JSON.parse('{"path":"/3.ui/","title":"User interface","lang":"en-US","frontmatter":{"description":"User interface ðŸ“š Reminder Compose Multiplatform Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code s...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"User interface\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T08:35:21.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/3.ui/"}],["meta",{"property":"og:title","content":"User interface"}],["meta",{"property":"og:description","content":"User interface ðŸ“š Reminder Compose Multiplatform Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T08:35:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T08:35:21.000Z"}]]},"git":{"updatedTime":1753864521000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":15},{"name":"A187839","username":"A187839","email":"ibrahim.gharbi@worldline.com","commits":6,"url":"https://github.com/A187839"},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":7,"url":"https://github.com/Brah"}],"changelog":[{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"907e701c1798fc19207122cb6c8f851551a6632d","time":1751967019000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"bddebd2dc74729595ca2d6fbae1e2ea8875b4083","time":1751966232000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"show answers UI"},{"hash":"c51b7947d1df84c3c915d23614d637e1366775d7","time":1751966198000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"592c01136440d46d13de0d2fbded5ac0c37d8cd4","time":1751958491000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update without solution for UI"},{"hash":"0d44eee32811f794633fbccf0affdfeac9ef4739","time":1743755906000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"c252fec057b591f2f4d996848ceedf55268ebb46","time":1728049777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update with viewmodel"},{"hash":"6c804d04d7a616a0e7d1f88f35d79b5934fb012e","time":1728037035000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update all sections with latest template and versions"},{"hash":"24bf4ff0cf3c9f69622b7d18246604de0276ac21","time":1725139589000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update overview"},{"hash":"a91606c59c19d296473a0828979507301769776d","time":1699621624000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"updated sources without local.properties, ressources links"},{"hash":"1c9357b0bca533f7091de7b4e991063744c8febe","time":1697802759000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"1b32cd6657532fcad72005ad5f0a41b880b81f9a","time":1696405897000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"Update with solutions"},{"hash":"00d3a7123d0a2afdc6c33dbe987ebf35b5b8e29d","time":1696364227000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update by testing the trainin"},{"hash":"dc580fb63aa4dbed3fc7d0e5d2195540c6c8c6ad","time":1696344778000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"a49847dffbd909e54e095faeb6206badcd0097c1","time":1696342112000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"0ad96a440c418614d928cea68e0a2dd8a825f45d","time":1696341773000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"a91868520e57e6c2cacd9f60cec2034bcd4bbe6e","time":1681384701000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"d110afe6446e1c060d62f7778905e91468bff300","time":1681383991000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"cb4410c82d89e61ff1d86d54346550587cc19b56","time":1681289564000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"minor changes to UI sections"},{"hash":"9a960fdd97d11817b5701a1ffa12496c5dbe2b5e","time":1680861560000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Added pair review corrections"},{"hash":"a790316a611cccb095bf5340091c570ada150d43","time":1680529803000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"730bec85be9341ad2a9bcd6ae0b4bd44752727f3","time":1680529131000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"a55cd2a699a39df0f4dc637cc5e2316de9d6a26b","time":1680528771000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"00d37c7c0d5ee5a204cf9e26647d94b76005e7ed","time":1680472550000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"add more section"},{"hash":"f0955da6d20e3b8ca9dcc7154902e32785020bdd","time":1680280137000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"end of network section"},{"hash":"b2237c8cf0d7c4b80ae9773e4a31aa18cc613bb0","time":1680257634000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"adding quiz.json API faker"},{"hash":"ad839480ebe6bb57324992f1e4c0754893b6ac65","time":1680199626000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"initial commit"}]},"filePathRelative":"3.ui/README.md","autoDesc":true}');export{k as comp,m as data};
