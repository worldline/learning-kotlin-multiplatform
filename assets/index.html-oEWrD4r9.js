import{_ as s,c as n,a as e,o as t}from"./app-CarcV5a4.js";const o={};function i(r,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="ressources" tabindex="-1"><a class="header-anchor" href="#ressources"><span>Ressources</span></a></h1><ul><li>For common code, store your resource files in the resources directory of the commonMain source set.</li><li>For platform-specific code, store your resource files in the resources directory of the corresponding source set.</li></ul><p>Jetbrain release his experimental API <code>painterResource</code> from <code>org.jetbrains.compose.resource</code> package</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token function">painterResource</span><span class="token punctuation">(</span></span>
<span class="line">    res<span class="token operator">:</span> String</span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> Painter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Return</strong> a Painter from the given resource path. Can load either a BitmapPainter for rasterized images (.png, .jpg) or a VectorPainter for XML Vector Drawables (.xml).</li><li><strong>XML Vector Drawables</strong> have the same format as for Android (https://developer.android.com/reference/android/graphics/drawable/VectorDrawable) except that external references to Android resources are not supported.</li><li>Note that XML Vector Drawables are not supported for Web target currently.</li></ul><h2 id="images" tabindex="-1"><a class="header-anchor" href="#images"><span>Images</span></a></h2><h4 id="declare-you-ressource-management-library-if-not-yet" tabindex="-1"><a class="header-anchor" href="#declare-you-ressource-management-library-if-not-yet"><span>Declare you ressource management library (if not yet)</span></a></h4><p><em>build.gradle</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">        commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token comment">// enable resources multiplatform dependancy</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>compose<span class="token punctuation">.</span>components<span class="token punctuation">.</span>resources<span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="add-your-image-files" tabindex="-1"><a class="header-anchor" href="#add-your-image-files"><span>Add your image files</span></a></h4><p>You can add it in the <code>composeResources/drawable</code> directory.</p><h4 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h4><p><em>WelcomeScreen.kt</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> quiz<span class="token punctuation">.</span>composeapp<span class="token punctuation">.</span>generated<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>Res</span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token function">Image</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    painter <span class="token operator">=</span> <span class="token function">painterResource</span><span class="token punctuation">(</span>Res<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>question<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    contentDescription <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fonts-and-string" tabindex="-1"><a class="header-anchor" href="#fonts-and-string"><span>Fonts and String</span></a></h2><p>For more ressource management possibilities for font and String management, you can use a third party lib :</p><ul><li><a href="&#39;https://github.com/icerockdev/moko-resources&#39;">Moko</a></li><li><a href="https://github.com/Skeptick/libres" target="_blank" rel="noopener noreferrer">Libres</a></li></ul><h2 id="strings" tabindex="-1"><a class="header-anchor" href="#strings"><span>Strings</span></a></h2><p><code>composeResources/values</code></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app_name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello World App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token function">Text</span><span class="token punctuation">(</span><span class="token function">stringResource</span><span class="token punctuation">(</span>Res<span class="token punctuation">.</span>string<span class="token punctuation">.</span>app_name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="fonts" tabindex="-1"><a class="header-anchor" href="#fonts"><span>Fonts</span></a></h2><p>Put your font files in the <code>composeResources/font</code> directory.</p><p>Then you can charge your your font like this :</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">val</span> fontAwesome <span class="token operator">=</span> <span class="token function">FontFamily</span><span class="token punctuation">(</span><span class="token function">Font</span><span class="token punctuation">(</span>Res<span class="token punctuation">.</span>font<span class="token punctuation">.</span>my_font<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="other-ressources" tabindex="-1"><a class="header-anchor" href="#other-ressources"><span>Other ressources</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">  <span class="token function">LaunchedEffect</span><span class="token punctuation">(</span>Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">    bytes <span class="token operator">=</span> Res<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;files/myDir/someFile.ext&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>✅ If everything is fine, congrats, you&#39;ve just finish this codelab. You can now experiment your kotlin skills eveywhere !</strong></p><h2 id="📖-further-reading" tabindex="-1"><a class="header-anchor" href="#📖-further-reading"><span>📖 Further reading</span></a></h2><ul><li><a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-multiplatform-resources-usage.html#resource-usage" target="_blank" rel="noopener noreferrer">Access and usage of KMP ressources</a></li></ul>`,30)]))}const c=s(o,[["render",i]]),l=JSON.parse('{"path":"/5.res/","title":"Ressources","lang":"en-US","frontmatter":{"description":"Ressources For common code, store your resource files in the resources directory of the commonMain source set. For platform-specific code, store your resource files in the resou...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ressources\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T08:35:21.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/5.res/"}],["meta",{"property":"og:title","content":"Ressources"}],["meta",{"property":"og:description","content":"Ressources For common code, store your resource files in the resources directory of the commonMain source set. For platform-specific code, store your resource files in the resou..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T08:35:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T08:35:21.000Z"}]]},"git":{"updatedTime":1753864521000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":1},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":9,"url":"https://github.com/Brah"}],"changelog":[{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"88132b7df36070a1b3a3aba747a13e7a97489f45","time":1739789584000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"8c94d0209126784cc019adbfc6a7315ece639889","time":1739787349000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"8cc88f079db65210f45c16f62561da08397b9d5d","time":1739787148000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"015a5b9403b95c563f0ffcf014705c6659bca20a","time":1739782528000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update ressources and android studio as IDE"},{"hash":"1fca33b7a59af23502448f270fad07011060f489","time":1737977527000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update ressources doc"},{"hash":"9d1a7e932fadce192a4d853223da23bc83d2368f","time":1737977186000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"3a8afc131ceb322003edc066c844e8104e81bf10","time":1737976786000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"6c804d04d7a616a0e7d1f88f35d79b5934fb012e","time":1728037035000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update all sections with latest template and versions"}]},"filePathRelative":"5.res/README.md","autoDesc":true}');export{c as comp,l as data};
