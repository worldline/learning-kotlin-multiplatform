import{_ as a,c as s,a as e,o as t}from"./app-CarcV5a4.js";const p="/learning-kotlin-multiplatform/assets/routes-BuqzzffU.png",i={};function o(l,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation"><span>Navigation</span></a></h1><h2 id="ðŸ§ª-create-navigation-between-composable-screens" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-create-navigation-between-composable-screens"><span>ðŸ§ª Create Navigation between composable screens</span></a></h2><p>Compose multiplatform navigation library enable a navigation with <code>navigation host</code></p><h4 id="add-navigation-dependency-to-your-project" tabindex="-1"><a class="header-anchor" href="#add-navigation-dependency-to-your-project"><span>Add <code>Navigation</code> dependency to your project</span></a></h4><details class="hint-container details"><summary>gradle.build.kts (module : composeApp)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            plugins <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">                <span class="token function">alias</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>kotlinSerialization<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>kotlin<span class="token punctuation">.</span>navigation<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>kotlinx<span class="token punctuation">.</span>json<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="create-your-navigation-host" tabindex="-1"><a class="header-anchor" href="#create-your-navigation-host"><span>Create your navigation host</span></a></h4><p>The navigation host is the configuration class that defines routes of your application.</p><p>Routes are path between all the composable screens that you will call later on your app.</p><p><img src="`+p+`" alt="routes overview"></p><p>For this Hands-on Lab we need 3 routes for :</p><ul><li>At startup to the <code>WelcomeScreen</code></li><li>from Welcome screen to the <code>QuizScreen</code></li><li>from the final question <code>QuizScreen</code>to the <code>ScoreScreen</code></li></ul><details class="hint-container details"><summary>App.kt (SourceSet: commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> questions <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Android is a great platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Android is a bad platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Serializable</span></span>
<span class="line"><span class="token keyword">object</span> WelcomeRoute</span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Serializable</span></span>
<span class="line"><span class="token keyword">object</span> QuizRoute</span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Serializable</span></span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">ScoreRoute</span><span class="token punctuation">(</span><span class="token keyword">val</span> score<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> questionSize<span class="token operator">:</span> Int<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span></span>
<span class="line">    navController<span class="token operator">:</span> NavHostController <span class="token operator">=</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">NavHost</span><span class="token punctuation">(</span></span>
<span class="line">            navController <span class="token operator">=</span> navController<span class="token punctuation">,</span></span>
<span class="line">            startDestination <span class="token operator">=</span> WelcomeRoute<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            composable<span class="token operator">&lt;</span>WelcomeRoute<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span></span>
<span class="line">                    onStartButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                        navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> QuizRoute<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">             composable<span class="token operator">&lt;</span>QuizRoute<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">QuestionScreen</span><span class="token punctuation">(</span></span>
<span class="line">                        questions <span class="token operator">=</span> questions<span class="token punctuation">,</span></span>
<span class="line">                        onFinishButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                            score<span class="token operator">:</span> Int<span class="token punctuation">,</span> questionSize<span class="token operator">:</span> Int <span class="token operator">-&gt;</span> navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> <span class="token function">ScoreRoute</span><span class="token punctuation">(</span>score<span class="token punctuation">,</span> questionSize<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            composable<span class="token operator">&lt;</span>ScoreRoute<span class="token operator">&gt;</span> <span class="token punctuation">{</span> backStackEntry <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token keyword">val</span> scoreRoute<span class="token operator">:</span> ScoreRoute <span class="token operator">=</span> backStackEntry<span class="token punctuation">.</span>toRoute<span class="token operator">&lt;</span>ScoreRoute<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">ScoreScreen</span><span class="token punctuation">(</span></span>
<span class="line">                    score <span class="token operator">=</span> scoreRoute<span class="token punctuation">.</span>score<span class="token punctuation">,</span></span>
<span class="line">                    total <span class="token operator">=</span> scoreRoute<span class="token punctuation">.</span>questionSize<span class="token punctuation">,</span></span>
<span class="line">                    onResetButtonPushed <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                        navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> QuizRoute<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="use-the-navigation-host" tabindex="-1"><a class="header-anchor" href="#use-the-navigation-host"><span>Use the navigation host</span></a></h4><h5 id="use-the-callback" tabindex="-1"><a class="header-anchor" href="#use-the-callback"><span>Use the callback</span></a></h5><p>Use <code>onStartButtonPushed</code> declared on screen instantiation in the <code>NavHost</code> on welcome screen buttons click</p><details class="hint-container details"><summary>WelcomeScreen.kt (SourceSet: commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span>onStartButtonPushed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        onClick <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">onStartButtonPushed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The same can be done for other screens</p><p><em>QuestionScreen.kt</em> (commonMain)</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">,</span> onFinishButtonPushed<span class="token operator">:</span> <span class="token punctuation">(</span>Int<span class="token punctuation">,</span>Int<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span></span>
<span class="line"><span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>bottom <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        score<span class="token operator">++</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        questionProgress<span class="token operator">++</span></span>
<span class="line">                        selectedAnswer <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">onFinishButtonPushed</span><span class="token punctuation">(</span>score<span class="token punctuation">,</span> questions<span class="token punctuation">.</span>size<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>ScoreScreen.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">ScoreScreen</span><span class="token punctuation">(</span>score<span class="token operator">:</span> Int<span class="token punctuation">,</span>total<span class="token operator">:</span>Int<span class="token punctuation">,</span>onResetButtonPushed<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                        fontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                        text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">score</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">total</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"> <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">     modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">onResetButtonPushed</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">)</span> </span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full solution for this section is availabe <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/2.navigation.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><p><strong>âœ… If everything is fine, congrats, you&#39;ve just finish this codelab. You can now experiment your kotlin skills eveywhere !</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://github.com/Tlaster/PreCompose/blob/master/docs/component/navigation.md" target="_blank" rel="noopener noreferrer">Precompose navigation</a></li><li><a href="&#39;https://github.com/icerockdev/moko-resources&#39;">Moko</a></li><li><a href="https://github.com/terrakok/kmp-awesome" target="_blank" rel="noopener noreferrer">KMP awesome libs database</a></li><li><a href="https://storage.googleapis.com/android-stories/compose/Compose_Animation_Cheat_Sheet.pdf" target="_blank" rel="noopener noreferrer">Animation in compose cheat sheet</a></li><li><a href="https://google.github.io/accompanist/" target="_blank" rel="noopener noreferrer">The accompagnist : a group of libraries that aim to supplement Compose</a></li><li><a href="https://github.com/AAkira/Kotlin-Multiplatform-Libraries#repository" target="_blank" rel="noopener noreferrer">AAkira libs database</a></li></ul>`,22)]))}const r=a(i,[["render",o]]),u=JSON.parse('{"path":"/4.nav/","title":"Navigation","lang":"en-US","frontmatter":{"description":"Navigation ðŸ§ª Create Navigation between composable screens Compose multiplatform navigation library enable a navigation with navigation host Add Navigation dependency to your pr...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Navigation\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T08:35:21.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/4.nav/"}],["meta",{"property":"og:title","content":"Navigation"}],["meta",{"property":"og:description","content":"Navigation ðŸ§ª Create Navigation between composable screens Compose multiplatform navigation library enable a navigation with navigation host Add Navigation dependency to your pr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T08:35:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T08:35:21.000Z"}]]},"git":{"updatedTime":1753864521000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":14},{"name":"A187839","username":"A187839","email":"ibrahim.gharbi@worldline.com","commits":10,"url":"https://github.com/A187839"},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":5,"url":"https://github.com/Brah"}],"changelog":[{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"c50626e08cddc4f9cca183469e5e8bacc7aef786","time":1751978473000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"9e6b480524dcfdf7dca5142bbc0d986602e4be07","time":1737976293000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"updates"},{"hash":"6dd5967cf89de6486f72bbbc0c299f2c3a3e5881","time":1731667995000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"updated to  vuepress2"},{"hash":"e1ce6651232fb75d2bc4a43947d5d9ceab066d95","time":1728293107000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update navigation with compose typed nav"},{"hash":"6834380f1185ae308d1be1f16ba3000a6de66390","time":1728052125000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added sources until preferences"},{"hash":"c252fec057b591f2f4d996848ceedf55268ebb46","time":1728049777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update with viewmodel"},{"hash":"6c804d04d7a616a0e7d1f88f35d79b5934fb012e","time":1728037035000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update all sections with latest template and versions"},{"hash":"d19a5ed49dc5277623a39529a7b47508e03af7ef","time":1725284885000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update some image background"},{"hash":"712f63c398d18d0cf72ffe9ce36e3528ee0da8a8","time":1725280399000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update User interface section , refactor sections by adding preferences"},{"hash":"b45a30839341eda7ae4e4f41e670f4e6c47d1088","time":1705592283000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update precompose"},{"hash":"785d1fba4fe089b700e03f8d29835213a4781ac4","time":1703283955000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update with training feedbacks ( database, mock architecture, logging ...)"},{"hash":"f88ad388f68107d6f009edc0e1c03f8cddea65a9","time":1700578023000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update precompose lib version"},{"hash":"8b0c0b6efea2f6ede8da4105b11b0b3c9436c150","time":1700573331000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update"},{"hash":"fc0edcf5e22caf0711b43bb6b12b78897f7591b2","time":1699909472000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update links"},{"hash":"a91606c59c19d296473a0828979507301769776d","time":1699621624000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"updated sources without local.properties, ressources links"},{"hash":"1b84863c6ab0f310883d1ee510fc9321b33f083c","time":1697802777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"600e5bbf4afdfe49fee38f3fcc55e54ef0238311","time":1696408875000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update with navigation solution"},{"hash":"dc580fb63aa4dbed3fc7d0e5d2195540c6c8c6ad","time":1696344778000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"a49847dffbd909e54e095faeb6206badcd0097c1","time":1696342112000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"0ad96a440c418614d928cea68e0a2dd8a825f45d","time":1696341773000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"c4b3dde882e5f019793bbd3e52107c8033e3233f","time":1680864698000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"rename codelab to Hands-on Lab"},{"hash":"9a960fdd97d11817b5701a1ffa12496c5dbe2b5e","time":1680861560000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Added pair review corrections"},{"hash":"0f0c6a449146d76329618287d5adb48472ab3254","time":1680734581000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added mokko reference"},{"hash":"35868aeee98bc2e18de581aa92b64de91d16b0fa","time":1680733445000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added sources with ressources management"},{"hash":"00d37c7c0d5ee5a204cf9e26647d94b76005e7ed","time":1680472550000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"add more section"},{"hash":"f0955da6d20e3b8ca9dcc7154902e32785020bdd","time":1680280137000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"end of network section"},{"hash":"ad839480ebe6bb57324992f1e4c0754893b6ac65","time":1680199626000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"initial commit"}]},"filePathRelative":"4.nav/README.md","autoDesc":true}');export{r as comp,u as data};
