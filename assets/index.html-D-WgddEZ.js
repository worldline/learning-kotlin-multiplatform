import{_ as s,c as a,a as e,o as t}from"./app-CarcV5a4.js";const i="/learning-kotlin-multiplatform/assets/server_tree-Gse56Whh.png",p={};function l(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="connectivity" tabindex="-1"><a class="header-anchor" href="#connectivity"><span>Connectivity</span></a></h1><p>Let&#39;s connect our Quiz app to internet.</p><h2 id="connect-my-app" tabindex="-1"><a class="header-anchor" href="#connect-my-app"><span>Connect my App</span></a></h2><p>For now, we will request a simple plain text json file hosted on this repo that will simulate a REST API call to be able to use our Ktor client.</p><p>The request &amp; answers details are specified below :</p><details class="hint-container details"><summary>Request</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">POST</span>
<span class="line">content-type: text/plain  </span>
<span class="line">url: https://github.com/worldline/learning-kotlin-multiplatform/raw/main/quiz.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Answer</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">code:200</span>
<span class="line">body: </span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;questions&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:1, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;You can create an emulator to simulate the configuration of a particular type of Android device using a tool like&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:3, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Theme Editor&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Android SDK Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;AVD Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Virtual Editor&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;What parameter specifies the Android API level that Gradle should use to compile your app?&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;minSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;compileSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;targetSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;testSdkVersion&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>To not overcomplexify the app, let&#39;s assume that :</p><ul><li>the QuizAPI provided by Ktor (cf below) is our data source</li><li>the repository will use a state flow that emit the API answer once at application startup</li></ul><h3 id="ðŸ§ª-ktor-as-a-multiplatform-http-client" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-ktor-as-a-multiplatform-http-client"><span>ðŸ§ª Ktor as a multiplatform HTTP client</span></a></h3><p>Ktor includes a multiplatform asynchronous HTTP client, which allows you to make requests and handle responses, extend its functionality with plugins, such as authentication and JSON deserialization.</p><h4 id="add-global-dependencies" tabindex="-1"><a class="header-anchor" href="#add-global-dependencies"><span>Add global dependencies</span></a></h4><p>Shared sources need it to use ktor library on your code</p><details class="hint-container details"><summary>build.gradle.kts (composeApp)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token function">alias</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>kotlinSerialization<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"> sourceSets <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> desktopMain <span class="token keyword">by</span> getting</span>
<span class="line">        commonMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>core<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>content<span class="token punctuation">.</span>negotiation<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>kotlinx<span class="token punctuation">.</span>json<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        androidMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>okhttp<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        desktopMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>apache<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        iosMain<span class="token punctuation">.</span><span class="token function">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>darwin<span class="token punctuation">)</span> <span class="token comment">//for iOS</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="enable-internet-permissions-android-only" tabindex="-1"><a class="header-anchor" href="#enable-internet-permissions-android-only"><span>Enable Internet permissions ( Android Only)</span></a></h4><p>You need to enable internet on Android otherwise you will not be able to use ktor client</p><details class="hint-container details"><summary>AndroidManifest.xml( androidMain)</summary><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.INTERNET<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="create-the-api-client-in-commonapp" tabindex="-1"><a class="header-anchor" href="#create-the-api-client-in-commonapp"><span>Create the API client in <code>commonApp</code></span></a></h4><details class="hint-container details"><summary>QuizApiDataSource.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>worldline<span class="token punctuation">.</span>quiz<span class="token punctuation">.</span>data<span class="token punctuation">.</span>dataclass<span class="token punctuation">.</span>Quiz</span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> globalHttpClient <span class="token operator">=</span> HttpClient <span class="token punctuation">{</span></span>
<span class="line">    engine <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">install</span><span class="token punctuation">(</span>ContentNegotiation<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">json</span><span class="token punctuation">(</span></span>
<span class="line">            contentType <span class="token operator">=</span> ContentType<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Plain<span class="token punctuation">,</span> <span class="token comment">// because Github is not returning an &#39;application/json&#39; header</span></span>
<span class="line">            json <span class="token operator">=</span> Json <span class="token punctuation">{</span></span>
<span class="line">                ignoreUnknownKeys <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                useAlternativeNames <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> QuizApiDatasource <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> httpClient <span class="token operator">=</span> globalHttpClient</span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Quiz <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;https://raw.githubusercontent.com/worldline/learning-kotlin-multiplatform/main/quiz.json&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="make-all-your-dataclass-become-serializable" tabindex="-1"><a class="header-anchor" href="#make-all-your-dataclass-become-serializable"><span>Make all your dataclass become serializable</span></a></h4><p>Ktor need it to transform the json string into your dataclasses</p><details class="hint-container details"><summary>Answer.kt (module : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span> String <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Question.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>SerialInfo</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>SerialName</span>
<span class="line"></span>
<span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Question</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token annotation builtin">@SerialName</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;correct_answer_id&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">val</span> correctAnswerId<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> answers<span class="token operator">:</span>List<span class="token operator">&lt;</span>Answer<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Quiz.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Quiz</span><span class="token punctuation">(</span><span class="token keyword">var</span> questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="create-your-repository-class-in-commonapp" tabindex="-1"><a class="header-anchor" href="#create-your-repository-class-in-commonapp"><span>Create your Repository class in <code>commonApp</code></span></a></h4><details class="hint-container details"><summary>QuizRepository.kt (module : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">class</span> QuizRepository <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> mockDataSource <span class="token operator">=</span> <span class="token function">MockDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> quizApiDatasource <span class="token operator">=</span> <span class="token function">QuizApiDatasource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span> <span class="token operator">=</span> quizApiDatasource<span class="token punctuation">.</span><span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>questions</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Exception<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span> mockDataSource<span class="token punctuation">.</span><span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">CORS issue for Web target</p><p>For the Web App, you can bypass CORS issue if you don&#39;t have a remote server with Chrome as below:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token operator">&lt;</span>google chrome path<span class="token operator">&gt;</span> --disable-web-security --user-data-dir<span class="token operator">=</span>/Users/xxxx/Desktop/googlechrometmp http://localhost:8080/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Sources</p><p>The full sources can be retrieved <a href="https://github.com/worldline/learning-kotlin-multiplatform/raw/main/docs/src/assets/solutions/5.network.zip" target="_blank" rel="noopener noreferrer">here</a></p></div><h2 id="create-a-server" tabindex="-1"><a class="header-anchor" href="#create-a-server"><span>Create a server</span></a></h2><h3 id="ðŸ§ª-create-a-ktor-server-module-inside-your-actual-project" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-create-a-ktor-server-module-inside-your-actual-project"><span>ðŸ§ª Create a Ktor server module inside your actual project</span></a></h3><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>You can create the server module from IntelliJ community or ultimate thanks to a template.</p></div><p>The module tree is as follow</p><p><img src="`+i+`" alt="server tree"></p><h3 id="add-a-database-h2-with-exposed-framework-to-store-the-questions" tabindex="-1"><a class="header-anchor" href="#add-a-database-h2-with-exposed-framework-to-store-the-questions"><span>Add a database H2 with Exposed framework to store the questions</span></a></h3><h3 id="add-an-mcp-server-with-kotlin-mcp-server-sdk" tabindex="-1"><a class="header-anchor" href="#add-an-mcp-server-with-kotlin-mcp-server-sdk"><span>Add an MCP server with Kotlin mcp server sdk</span></a></h3><h3 id="ðŸŽ¯-solutions-1" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions-1"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>build.gradle.kts</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alias</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>kotlinJvm<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">alias</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>ktor<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">alias</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>kotlinSerialization<span class="token punctuation">)</span></span>
<span class="line">    application</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.worldline.quiz&quot;</span></span></span>
<span class="line">version <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0.0&quot;</span></span></span>
<span class="line"></span>
<span class="line">application <span class="token punctuation">{</span></span>
<span class="line">    mainClass<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.worldline.quiz.ApplicationKt&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    applicationDefaultJvmArgs <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;-Dio.ktor.development=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">extra<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;io.ktor.development&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;false&quot;</span></span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>logback<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>core<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>cio<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>kotlinx<span class="token punctuation">.</span>json<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>content<span class="token punctuation">.</span>negotiation<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>cors<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>config<span class="token punctuation">.</span>yaml<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">ktor <span class="token punctuation">{</span></span>
<span class="line">    fatJar <span class="token punctuation">{</span></span>
<span class="line">        archiveFileName<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;fat.jar&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    docker <span class="token punctuation">{</span></span>
<span class="line">        externalRegistry<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span></span>
<span class="line">            io<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>features<span class="token punctuation">.</span>DockerImageRegistry<span class="token punctuation">.</span><span class="token function">dockerHub</span><span class="token punctuation">(</span></span>
<span class="line">                appName <span class="token operator">=</span> provider <span class="token punctuation">{</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor-quiz&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                username <span class="token operator">=</span> providers<span class="token punctuation">.</span><span class="token function">environmentVariable</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;KTOR_IMAGE_REGISTRY_USERNAME&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                password <span class="token operator">=</span> providers<span class="token punctuation">.</span><span class="token function">environmentVariable</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;KTOR_IMAGE_REGISTRY_PASSWORD&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><details class="hint-container details"><summary>Application.kt</summary></details><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line">ffun <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    io<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>server<span class="token punctuation">.</span>cio<span class="token punctuation">.</span>EngineMain<span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> Application<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">install</span><span class="token punctuation">(</span>CORS<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">allowMethod</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>Options<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">allowMethod</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>Post<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">allowMethod</span><span class="token punctuation">(</span>HttpMethod<span class="token punctuation">.</span>Get<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">allowHeader</span><span class="token punctuation">(</span>HttpHeaders<span class="token punctuation">.</span>AccessControlAllowOrigin<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">allowHeader</span><span class="token punctuation">(</span>HttpHeaders<span class="token punctuation">.</span>ContentType<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">anyHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">install</span><span class="token punctuation">(</span>ContentNegotiation<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">configureRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><details class="hint-container details"><summary>Routing.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> Application<span class="token punctuation">.</span><span class="token function">configureRouting</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    routing <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/quiz&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            call<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token function">generateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">staticResources</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;static&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">generateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Quiz <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> quizQuestions <span class="token operator">=</span> mutableListOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">val</span> questions <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;What is the primary goal of Kotlin Multiplatform?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;How does Kotlin Multiplatform facilitate code sharing between platforms?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Which platforms does Kotlin Multiplatform support?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;What is a common use case for Kotlin Multiplatform?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Which naming of KMP is deprecated?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;How does Kotlin Multiplatform handle platform-specific implementations?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;At which Google I/O, Google announced first-class support for Kotlin on Android?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;What is the name of the Kotlin mascot?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;The international yearly Kotlin conference is called...&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-literal singleline"><span class="token string">&quot;Where will be located the next international yearly Kotlin conference?&quot;</span></span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">val</span> answers <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;To share code between multiple platforms&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;To exclusively compile code to JavaScript&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;To build only Android applications&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;To create iOS-only applications&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By sharing business logic and adapting UI&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By writing separate code for each platform&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By using only Java libraries&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By using code translation tools&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Android, iOS, desktop and web&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Only Android&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Only iOS&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Only web applications&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Developing a cross-platform app&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Building a desktop-only application&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Creating a server-side application&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Writing a standalone mobile app&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Kotlin Multiplatform Mobile (KMM)&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Hadi Multiplatform&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Jetpack multiplatform&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Kodee multiplatform&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Through expect and actual declarations&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By automatically translating code&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By restricting to a single platform&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;By excluding platform-specific features&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;2017&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;2016&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;2014&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;2020&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Kodee&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Hadee&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Kotlinee&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Kotee&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;KotlinConf&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;KodeeConf&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;KConf&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;KotlinKonf&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Copenhagen, Denmark&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Amsterdam, Netherlands&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Tokyo, Japan&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;Lille, France&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> questions<span class="token punctuation">.</span>indices<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> shuffledAnswers <span class="token operator">=</span> answers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shuffled</span><span class="token punctuation">(</span>Random<span class="token punctuation">.</span>Default<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> correctAnswerId <span class="token operator">=</span> shuffledAnswers<span class="token punctuation">.</span><span class="token function">indexOfFirst</span> <span class="token punctuation">{</span> it <span class="token operator">==</span> answers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">val</span> question <span class="token operator">=</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1L</span><span class="token punctuation">,</span> questions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> correctAnswerId<span class="token punctuation">.</span><span class="token function">toLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shuffledAnswers<span class="token punctuation">.</span><span class="token function">mapIndexed</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> answer <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token function">Answer</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1L</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        quizQuestions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">Quiz</span><span class="token punctuation">(</span>quizQuestions<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">Other libs</p><p>If you want well-known retrofit style lib, you can use <a href="https://github.com/Foso/Ktorfit" target="_blank" rel="noopener noreferrer">KtorFit</a> to separate endpoint declaration from httpclient configuration</p><p>Also for better image loading from the internet with cache, you can use the following third-party Compose Multiplatform libraries</p><ul><li><a href="https://github.com/qdsfdhvh/compose-imageloader" target="_blank" rel="noopener noreferrer">Compose Image Loader </a></li><li><a href="https://github.com/Kamel-Media/Kamel" target="_blank" rel="noopener noreferrer">Kamel</a></li></ul></div><p>An that&#39;s it, you quiz have now a remote list of questions.</p><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://ktor.io/docs/getting-started-ktor-client.html" target="_blank" rel="noopener noreferrer">Ktor client website</a></li><li><a href="https://kotlinlang.org/docs/coroutines-overview.html" target="_blank" rel="noopener noreferrer">Coroutine documentation</a></li><li><a href="https://kotlinlang.org/docs/multiplatform-mobile-ktor-sqldelight.html" target="_blank" rel="noopener noreferrer">Ktor multiplatform documentation</a></li><li><a href="https://www.youtube.com/watch?v=-mN3VyJuCjM&amp;list=WL&amp;index=3" target="_blank" rel="noopener noreferrer">REST API basics</a></li></ul>`,49)]))}const u=s(p,[["render",l]]),r=JSON.parse(`{"path":"/7.connect/","title":"Connectivity","lang":"en-US","frontmatter":{"description":"Connectivity Let's connect our Quiz app to internet. Connect my App For now, we will request a simple plain text json file hosted on this repo that will simulate a REST API call...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Connectivity\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-30T08:35:21.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://worldline.github.io/learning-kotlin-multiplatform/learning-kotlin-multiplatform/7.connect/"}],["meta",{"property":"og:title","content":"Connectivity"}],["meta",{"property":"og:description","content":"Connectivity Let's connect our Quiz app to internet. Connect my App For now, we will request a simple plain text json file hosted on this repo that will simulate a REST API call..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-30T08:35:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-30T08:35:21.000Z"}]]},"git":{"updatedTime":1753864521000,"contributors":[{"name":"Ibrahim Gharbi","username":"","email":"brah.gharbi@gmail.com","commits":19},{"name":"A187839","username":"A187839","email":"ibrahim.gharbi@worldline.com","commits":9,"url":"https://github.com/A187839"},{"name":"Brah","username":"Brah","email":"brah.gharbi@gmail.com","commits":4,"url":"https://github.com/Brah"}],"changelog":[{"hash":"5fc90ff65434ad22dc9217f48adf6666e4ae2c34","time":1753864521000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"5afd2cfa1576adc95372dfd6a4125e2dd30f084e","time":1753376463000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"bb46b9e8a6e31076026bccd606ff08a2eb6280c7","time":1740044189000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"minor fixes"},{"hash":"0104cc007697c818e6cf84edef771cee938674df","time":1739789822000,"email":"brah.gharbi@gmail.com","author":"Brah","message":"update"},{"hash":"9e690d29cfe9940a7d940dc8108631910dea11b5","time":1728075350000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update minor wording"},{"hash":"f53488d1070c6b67e00bf086f3861fa135b1d496","time":1728056950000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update with sources"},{"hash":"a6860f8e9f316ac633231020266d37909cfe54ab","time":1728053482000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update preferences section"},{"hash":"6834380f1185ae308d1be1f16ba3000a6de66390","time":1728052125000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added sources until preferences"},{"hash":"c252fec057b591f2f4d996848ceedf55268ebb46","time":1728049777000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update with viewmodel"},{"hash":"6c804d04d7a616a0e7d1f88f35d79b5934fb012e","time":1728037035000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"update all sections with latest template and versions"},{"hash":"712f63c398d18d0cf72ffe9ce36e3528ee0da8a8","time":1725280399000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update User interface section , refactor sections by adding preferences"},{"hash":"0663238ca36340eaf78655e29022bfc78d9b3f75","time":1708353397000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update with architecture basics link"},{"hash":"785d1fba4fe089b700e03f8d29835213a4781ac4","time":1703283955000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update with training feedbacks ( database, mock architecture, logging ...)"},{"hash":"51cb34333f287ba562c4611c8be7a243f8858459","time":1700574707000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update with server"},{"hash":"8b0c0b6efea2f6ede8da4105b11b0b3c9436c150","time":1700573331000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update"},{"hash":"6fec0dee6c3a110ca94f7a3d698e8155e897e9e4","time":1699863165000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"added network link"},{"hash":"b0f4ead335187b7c469f17054f458dd3559e1f66","time":1697802769000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"1b32cd6657532fcad72005ad5f0a41b880b81f9a","time":1696405897000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"Update with solutions"},{"hash":"00d3a7123d0a2afdc6c33dbe987ebf35b5b8e29d","time":1696364227000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update by testing the trainin"},{"hash":"2f2b7610eab86bdff458f6a174a9f24a358397f6","time":1696342309000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"0ad96a440c418614d928cea68e0a2dd8a825f45d","time":1696341773000,"email":"ibrahim.gharbi@worldline.com","author":"A187839","message":"update for mob devops summit"},{"hash":"8fdcac47cb34c47a91c188bb3b7487a3df803a66","time":1681384324000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"c4b3dde882e5f019793bbd3e52107c8033e3233f","time":1680864698000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"rename codelab to Hands-on Lab"},{"hash":"9a960fdd97d11817b5701a1ffa12496c5dbe2b5e","time":1680861560000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Added pair review corrections"},{"hash":"35868aeee98bc2e18de581aa92b64de91d16b0fa","time":1680733445000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added sources with ressources management"},{"hash":"8244f16559d91e13373337f3fa2b9e58f8956946","time":1680529841000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"6ef98c7db653d15e0e99460cae23d7459c454cf7","time":1680529206000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"Update README.md"},{"hash":"00d37c7c0d5ee5a204cf9e26647d94b76005e7ed","time":1680472550000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"add more section"},{"hash":"f0955da6d20e3b8ca9dcc7154902e32785020bdd","time":1680280137000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"end of network section"},{"hash":"99d00f9b495966f8185e21f674ff9e34bae5e5d8","time":1680277783000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"added network section"},{"hash":"b2237c8cf0d7c4b80ae9773e4a31aa18cc613bb0","time":1680257634000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"adding quiz.json API faker"},{"hash":"ad839480ebe6bb57324992f1e4c0754893b6ac65","time":1680199626000,"email":"brah.gharbi@gmail.com","author":"Ibrahim Gharbi","message":"initial commit"}]},"filePathRelative":"7.connect/README.md","autoDesc":true}`);export{u as comp,r as data};
